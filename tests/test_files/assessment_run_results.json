{"status-code":0,"assessment-run-results":"<?xml version=\"1.0\" encoding=\"utf-16\"?>\u000d\u000a<Assessments>\u000d\u000a  <AssessmentRunData RequestId=\"\" AssessmentRunId=\"31527314-aaba-4ade-9a93-061ce4225ea3\" AssessmentName=\"E-commerce\" ApplicationName=\"www.mydomain.com.br\" ApplicationId=\"dcb434b9-8101-4a85-9bf5-57396b283c7e\" ApplicationUrl=\"http:\/\/www.mydomain.com\">\u000d\u000a    <AssessmentRunInfo>\u000d\u000a      <HarmScore>0<\/HarmScore>\u000d\u000a      <RiskFactor>1<\/RiskFactor>\u000d\u000a      <Status>Incomplete<\/Status>\u000d\u000a      <AttackCount>93<\/AttackCount>\u000d\u000a      <MaxPagesVisited>3<\/MaxPagesVisited>\u000d\u000a      <StartTime>10\/21\/2017 05:13:25<\/StartTime>\u000d\u000a      <EndTime>10\/21\/2017 05:13:59<\/EndTime>\u000d\u000a    <\/AssessmentRunInfo>\u000d\u000a    <SmartAttacks>\u000d\u000a      <SmartAttacksData>\u000d\u000a        <SmartAttackInfo PolicyId=\"cca8197b-96a1-43a1-9578-087dbb714df6\" PolicyVersion=\"1.2\" CenzicId=\"CPL0002120\" Severity=\"Default\">\u000d\u000a          <SmartAttackName>Cross-Site Scripting - [OWASP 2013 A 3]<\/SmartAttackName>\u000d\u000a          <Description>&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aCross-site Scripting vulnerabilities allow malicious scripts to execute in the context of a trusted \u000asession with a web site.&amp;#160; The SmartAttack alters the inputs to the web application to send benign \u000aversions of such malicious scripts, and detects the actual execution or unfiltered reflection of such \u000ascripts.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a<\/Description>\u000d\u000a          <TechnicalDescription>&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThe main aim of the Cross-Site Scripting SmartAttack is to get the application to reflect a piece of \u000d\u000aJavascript code in an HTTP response. This code is designed to generate a Javascript alert - in other \u000d\u000awords, a pop-up message. The SmartAttack identifies a failure when it detects evidence of the \u000d\u000ainjected value returned on other pages or in alerts.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis SmartAttack can fault inject fields in HTTP queries (which typically correspond to fields in \u000d\u000aforms), particular HTTP headers, and cookies. By default, it injects fields in HTTP queries. Because \u000d\u000ait injects all such fields, it may cause problems with the application or database bloat. Hence, it \u000d\u000ais \u000d\u000anot safe to be used for applications that are live.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis SmartAttack works with all kinds of traversals. This SmartAttack walks the traversal and \u000d\u000aidentifies HTTP requests that are candidates for fault injection. For each candidate request, the \u000d\u000aSmartAttack sends a series of fault-injected requests, trying a variety of problematic strings.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis SmartAttack can be configured to recognize error pages that are received in response to fault-\u000d\u000ainjected input, allowing it to ignore legitimate responses that might otherwise appear to be faults. \u000d\u000aIn \u000d\u000aaddition, it can be configured to issue warnings when an error page does not appear in response to \u000d\u000afault-injected input. There are several options governing the fault injection functionality, as detailed \u000d\u000ain the Parameters section below.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:2mm; margin-right:6mm; text-indent:0mm; margin-top:4mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Arial\" color=\"#002e5c\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&lt;b&gt;Injections and requests&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aBecause the Cross-Site Scripting SmartAttack has to detect faults that do not appear in the \u000d\u000aimmediate response to a fault-injected string, it tags each fault injection string with a pair of \u000d\u000anumbers identifying the current test run and the injection number. This enables it to report which \u000d\u000ainjection produced a fault that was detected at some later point in the traversal.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThe SmartAttack also employs a Fast Mode (see parameter &amp;ldquo;Use Fast Mode&amp;rdquo; below) by default, \u000d\u000awhere it quickly tests each field in the candidate requests for reflection of a benign input. When \u000d\u000arunning in Fast Mode, the SmartAttack will only use its full array of injections on fields for which \u000d\u000athe input is reflected in the immediate response. For others, it uses a &amp;lsquo;universal&amp;rsquo; injection, \u000d\u000athat is, \u000d\u000aone most likely to catch a vulnerability.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThe SmartAttack tries to use various combinations of encoding and escape sequences in order to \u000d\u000agive the piece of Javascript code a better chance at getting executed. However, you may also add \u000d\u000ayour own injections to be used by the SmartAttack (see parameter &amp;ldquo;Injection Value File&amp;rdquo; \u000d\u000abelow).&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThe main reason for the effectiveness of this SmartAttack is that it actively tries to generate, and \u000d\u000athen looks for, Javascript alerts. In case the injected script is reflected in a response, but an alert \u000d\u000awas \u000d\u000anot generated, the SmartAttack finds out the location where the injection got reflected in the HTML \u000d\u000aof the response. Then, it intelligently guesses if the location is such that it would allow an alert \u000d\u000ato be \u000d\u000agenerated in case a specially crafted injection was used in stead of the unsuccessful injection. This \u000d\u000acombination of detection logics gives much better results than a pure sub-string based detection \u000d\u000aapproach.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:2mm; margin-right:6mm; text-indent:0mm; margin-top:4mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Arial\" color=\"#002e5c\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&lt;b&gt;To Use&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:19mm; margin-right:6mm; text-indent:-6mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a1.&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;Create a traversal that represents the target application or a subset \u000d\u000aof specific pages in the \u000d\u000aapplication.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:19mm; margin-right:6mm; text-indent:-6mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a2.&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;Create a new Assessment or open an existing Assessment.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:19mm; margin-right:6mm; text-indent:-6mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a3.&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;Add the traversal created above to the Assessment.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:19mm; margin-right:6mm; text-indent:-6mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a4.&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;Add this SmartAttack to the Assessment.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:19mm; margin-right:6mm; text-indent:-6mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a5.&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;Set the parameters or accept the defaults in the Assessment. (See Parameters \u000d\u000abelow.)&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:19mm; margin-right:6mm; text-indent:-6mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a6.&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;Run the Assessment.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:2mm; margin-right:6mm; text-indent:0mm; margin-top:4mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Arial\" color=\"#002e5c\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&lt;b&gt;To Verify&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aHere are the steps to be followed to manually verify a vulnerability reported by this SmartAttack:&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:19mm; margin-right:6mm; text-indent:-6mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a1.&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;First, observe if the &amp;lsquo;Item Details&amp;rsquo; tab of the report item \u000d\u000amentions that the vulnerability \u000d\u000awas detected in an alert. If so, double-click on the report item and click &amp;lsquo;Render \u000d\u000aResponse&amp;rsquo;. The Javascript alert should show up while the page is being rendered. If the \u000d\u000aalert shows up, the vulnerability is verified.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:19mm; margin-right:6mm; text-indent:-6mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a2.&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;If the alert does not show up, note the field shown to be vulnerable, \u000d\u000athe injection value \u000d\u000aused and if the vulnerability is reflected or persistent from the report item.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:32mm; margin-right:6mm; text-indent:-6mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aa.&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;The plain text form of the injection value and the vulnerable field \u000d\u000ais specified in \u000d\u000athe &amp;lsquo;Item Details&amp;rsquo; tab of the report item.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:32mm; margin-right:6mm; text-indent:-6mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000ab.&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;The exact form of the injection value is also highlighted in the &amp;lsquo;HTTP \u000d\u000aRequest&amp;rsquo; \u000d\u000atab when it is opened after double-clicking on the report item first.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:19mm; margin-right:6mm; text-indent:-6mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a3.&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;Note the URL and the request shown to contain the vulnerable field from \u000d\u000athe report item \u000d\u000a&amp;lsquo;Item Details&amp;rsquo; and &amp;lsquo;HTTP Request&amp;rsquo; tabs.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:19mm; margin-right:6mm; text-indent:-6mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a4.&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;Using the sequence view and a replay of the traversal, determine the \u000d\u000asequence of actions \u000d\u000athat led to generation of this request.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:19mm; margin-right:6mm; text-indent:-6mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a5.&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;From a normal browser, follow this sequence to reach the page from which \u000d\u000athe request \u000d\u000awas generated. At this point, follow one of these two approaches while performing the \u000d\u000alast step in the sequence of actions to generate the vulnerable request:&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:32mm; margin-right:6mm; text-indent:-6mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aa.&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;Find the vulnerable field and insert the plain form of the injection \u000d\u000avalue in it and \u000d\u000aperform the last step to generate the vulnerable request.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:32mm; margin-right:6mm; text-indent:-6mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000ab.&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;If the vulnerable field is hidden, or if the plain form of the injection \u000d\u000avalue is \u000d\u000asame as the exact form used, then perform the last step, but use an intercepting \u000d\u000aHTTP proxy such as Paros or WebScarab to trap the vulnerable request. Then, \u000d\u000ainsert the exact form of the injection value in place of the value of the field and \u000d\u000asend the request.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:19mm; margin-right:6mm; text-indent:-6mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a6.&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;In case of a reflected vulnerability, in the page that results from \u000d\u000athis injected request, the \u000d\u000aalert should show up. If the alert shows up, the vulnerability is verified.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:19mm; margin-right:6mm; text-indent:-6mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a7.&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;In case of a persistent vulnerability, follow the sequence of the traversal \u000d\u000anormally from \u000d\u000ahere onwards. At the page specified in the &amp;lsquo;HTTP Response&amp;rsquo; tab of the report item, the \u000d\u000aalert should show up. If the alert shows up, the vulnerability is verified.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:2mm; margin-right:6mm; text-indent:0mm; margin-top:4mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Arial\" color=\"#002e5c\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&lt;b&gt;Parameters&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Arial\" color=\"#333399\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&lt;b&gt;&lt;i&gt;Optional&lt;\/i&gt;&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Attacks&lt;\/i&gt; &lt;i&gt;to&lt;\/i&gt; &lt;i&gt;Delay (list of regular expressions)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter is a set of regular expressions that will be used to identify requests for which attacks \u000d\u000ashould be delayed until the end of the traversal (such as login requests). Because slashes are meta-\u000d\u000acharacters in regular expressions, if you wish to include them in your URL pattern, you must escape \u000d\u000athem with a backslash.&lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;login&amp;rdquo;.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Inject Form Fields (Boolean)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter controls whether HTTP query fields will be injected. By default, all fields will be \u000d\u000ainjected. &lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;true&amp;rdquo;.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Inject Cookies (Boolean)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter controls whether individual cookies in the &amp;ldquo;Cookie&amp;rdquo; header (if present) will \u000d\u000abe \u000d\u000ainjected. &lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;false&amp;rdquo;.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Inject A Field At A Time (Boolean)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter specifies that fault injection should happen by injecting one item at a time instead \u000d\u000aof \u000d\u000aall at once. The injectable items are elements of GET or POST queries, individual headers, or \u000d\u000acookies. Field-at-a-time injection can take considerably longer but might uncover vulnerabilities \u000d\u000athat would not be found with all-at-once injection. (The reason for this is that some forms employ \u000d\u000ainput validation only on some but not all fields. With all-at-once injection, if &lt;i&gt;any&lt;\/i&gt; of the fields \u000d\u000areject \u000d\u000aan input, vulnerabilities in non-validated fields will remain undetected.)&lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;true&amp;rdquo;.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Stop On First Fault (Boolean)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter controls whether the SmartAttack will stop after finding the first injection value that \u000d\u000areveals a vulnerability in a form, or continue to find all injection values that produce faults.&lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;true&amp;rdquo;.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Error Page Regular Expression (regular expression)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter specifies a regular expression pattern which will be used to identify error pages by \u000d\u000amatching a string in their content. Such error pages will be excluded from fault detection. This \u000d\u000amechanism is useful as a way of eliminating false positives.&lt;br \/&gt;\u000d\u000aThe default value is empty (no regular expression).&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;URLs To Skip (list of regular expressions)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter specifies a list of regular expression patterns which will be matched against the \u000d\u000aURL of each HTTP request that is a candidate for fault injection. If the URL matches one of the \u000d\u000apatterns in the skip list, the request will not be fault injected. This parameter overrides the &amp;lsquo;URLs \u000d\u000aTo Inject&amp;rsquo; parameter, in that a URL added to both these parameters would be skipped rather than \u000d\u000ainjected.&lt;br \/&gt;\u000d\u000aThe default value is an empty list.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Fields To Skip (list of regular expressions)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter specifies a list of regular expression patterns which will be used to identify form \u000d\u000afield and cookie names that should be excluded from fault injection. This parameter overrides the \u000d\u000a&amp;lsquo;Fields To Inject&amp;rsquo; parameter, in that a field added to both these parameters would be skipped \u000d\u000arather \u000d\u000athan injected.&lt;br \/&gt;\u000d\u000aThe default value is an empty list.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;URLs To Inject (list of regular expressions)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter specifies a list of regular expression patterns which will be matched against the \u000d\u000aURL of each HTTP request that is a candidate for fault injection. If the URL matches one of the \u000d\u000apatterns in the inject list, only then the request will be fault injected. An empty list means all \u000d\u000arequests will be injected, subject to other parameter settings.&lt;br \/&gt;\u000d\u000aThe default value is an empty list.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Fields To Inject (list of regular expressions)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter specifies a list of regular expression patterns which will be used to identify form \u000d\u000afield and cookie names that should be fault injected. Any field that is not on this list will not be \u000d\u000ainjected. An empty list means all fields will be injected, subject to other parameter settings.&lt;br \/&gt;\u000d\u000aThe default value is an empty list.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Injection String Groups (enumeration)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter controls which subsets of fault injection strings are used in a test. The strings are \u000d\u000adivided into &amp;ldquo;Set #1,&amp;rdquo; &amp;ldquo;Set #2,&amp;rdquo; &amp;ldquo;Set #3,&amp;rdquo; and &amp;ldquo;Set #4,&amp;rdquo; \u000d\u000awhere the first group consists of just a few \u000d\u000afault injection values (those that are typically the most effective) and the following groups add more \u000d\u000astrings. The fourth group is very large and should be run only when comprehensive testing is the \u000d\u000apriority and the amount of time consumed by the Assessment run is not. The groups are mutually \u000d\u000aexclusive and not supersets of one another and you can choose to run some and not others. \u000d\u000aSpecifying no groups results in all strings being used.&lt;br \/&gt;\u000d\u000aThe default is to use the following fault injection string groups: [&amp;ldquo;Set #1&amp;rdquo;, &amp;ldquo;Set \u000d\u000a#2&amp;rdquo;, &amp;ldquo;Set #3&amp;rdquo;].&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Use Fast Mode (Boolean)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter controls whether the SmartAttack will inject a benign string in each field to decide \u000d\u000aif it should perform real Cross-Site Scripting injections on the field. Turning this parameter off may \u000d\u000acause an increase, by a factor of as much as a number of times, in the time required for an \u000d\u000aAssessment run.&lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;false&amp;rdquo;.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Arial\" color=\"#333399\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&lt;b&gt;&lt;i&gt;Advanced&lt;\/i&gt;&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Max Traversal Restarts (integer)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter controls whether and how many times a fault injector will attempt to restart a \u000d\u000atraversal if fault injection interferes with replaying the traversal. The parameter can be set to &amp;ldquo;0&amp;rdquo; \u000d\u000ato \u000d\u000aprevent the traversal from being restarted. &lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;4&amp;rdquo;.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Start SmartAttack After Traversal (Boolean)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis is an advanced parameter that controls whether the SmartAttack processing (concurrent \u000d\u000abrowsing, in this case) begins during the traversal or after the traversal has completed. The default \u000d\u000ais false, meaning that the processing will start &lt;i&gt;during&lt;\/i&gt; the traversal. In cases where traversals \u000d\u000aare \u000d\u000aunable to complete due to the effects of SmartAttack processes during concurrent browsing, setting \u000d\u000athis parameter to true will postpone concurrent browsing until after the traversal has completed, \u000d\u000awhich allows all of the injectable requests in the traversal to be collected and injected after the \u000d\u000atraversal is over. While this allows all of the concurrent browsing to occur, it might not occur in \u000d\u000athe \u000d\u000asame context or state that it would have during the traversal. &lt;br \/&gt;\u000d\u000aDefault = &amp;ldquo;false&amp;rdquo;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Skip First N Injectable Requests (integer)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis is an advanced parameter that specifies the number of the injectable request on which fault \u000d\u000ainjection will begin, allowing previous requests to be exempted from fault injection. In some cases, \u000d\u000atraversals are unable to complete due to fault injection. In such cases, this parameter can be used \u000d\u000ato \u000d\u000apick up fault injection after the point where the traversal was compromised in a previous \u000d\u000aAssessment run. The report items for fault injector SmartAttacks identify the number of each \u000d\u000arequest being injected. So you can identify the request where you wish to start and enter that \u000d\u000anumber in this parameter.&lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;0&amp;rdquo;.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Headers To Inject (list of strings)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter indicates which HTTP headers (if any) will be injected. The parameter should \u000d\u000aspecify a list of strings with HTTP header names. By default, no HTTP headers will be fault \u000d\u000ainjected. Valid headers are &amp;quot;Accept&amp;quot;, &amp;quot;Accept-Charset&amp;quot;, &amp;quot;Accept-Encoding&amp;quot;, \u000d\u000a&amp;quot;Accept-Language&amp;quot;, \u000d\u000a&amp;quot;Allow&amp;quot;, &amp;quot;Authorization&amp;quot;, &amp;quot;Cache-Control&amp;quot;, &amp;quot;Connection&amp;quot;, &amp;quot;Content-Encoding&amp;quot;, \u000d\u000a&amp;quot;Content-\u000d\u000aLanguage&amp;quot;, &amp;quot;Content-Length&amp;quot;, &amp;quot;Content-Location&amp;quot;, &amp;quot;Content-MD5&amp;quot;, &amp;quot;Content-Range&amp;quot;, \u000d\u000a&amp;quot;Content-\u000d\u000aType&amp;quot;, &amp;quot;Cookie&amp;quot;, &amp;quot;Date&amp;quot;, &amp;quot;Expect&amp;quot;, &amp;quot;Expires&amp;quot;, &amp;quot;From&amp;quot;, \u000d\u000a&amp;quot;Host&amp;quot;, &amp;quot;If-Match&amp;quot; &amp;quot;If-Modified-Since&amp;quot;, &amp;quot;If-\u000d\u000aNone-Match&amp;quot;, &amp;quot;If-Range&amp;quot;, &amp;quot;If-Unmodified-Since&amp;quot;, &amp;quot;Last-Modified&amp;quot;, \u000d\u000a&amp;quot;Location&amp;quot;, &amp;quot;Max-Forwards&amp;quot;, \u000d\u000a&amp;quot;Pragma&amp;quot;, &amp;quot;Proxy-Authorization&amp;quot;, &amp;quot;Range&amp;quot;, &amp;quot;Referer&amp;quot;, &amp;quot;TE&amp;quot;, \u000d\u000a&amp;quot;Trailer&amp;quot;, &amp;quot;Transfer-Encoding&amp;quot;, \u000d\u000a&amp;quot;Upgrade&amp;quot;, &amp;quot;User-Agent&amp;quot;, &amp;quot;Via&amp;quot;, and &amp;quot;Warning&amp;quot;. &lt;br \/&gt;\u000d\u000aThe default value is an empty list.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Warn If No Error Page After FI (Boolean)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter controls whether Cenzic Hailstorm will issue a warning if an error page does not \u000d\u000aappear in response to a fault-injected input. This parameter only takes effect if an \u000d\u000a&amp;ldquo;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;font face=\"Lucida Console\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aErrorPageMatchExpr&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&amp;rdquo; has been specified.&lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;false&amp;rdquo;.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Skip Equivalent Requests (Boolean)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter controls whether the SmartAttack will skip fault injection for requests that are \u000d\u000aequivalent to ones that have already been injected. Requests are considered equivalent if their query \u000d\u000aelement names are the same, even if the query values differ.&lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;true&amp;rdquo;.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Distinguish Request Cookie (Boolean)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter only takes effect if the skipEquivalentRequests parameter is true. This parameter \u000d\u000acontrols whether the SmartAttack will consider cookie values when determining whether requests \u000d\u000aare equivalent. &lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;false&amp;rdquo;.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Max Requests With Same URL (integer)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter sets the maximum number of requests that will be injected that have the same base \u000d\u000aURL, but different queries.&lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;15&amp;rdquo;.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Ajax Request Formats (file)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter specifies the file to be used for descriptions of different AJAX request formats.&lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;font face=\"Lucida Console\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aAjaxRequestFormat.txt&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&amp;rdquo; (the file).&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Injection Value File (string)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter specifies the name of the file that contains the fault injection strings for this \u000d\u000aSmartAttack. Each SmartAttack that involves fault injection is associated with its own unique file \u000d\u000a(set of inputs), except for Buffer Overflow and Format String, which do not require separate sets of \u000d\u000ainputs.&lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;font face=\"Lucida Console\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000adata_FI_CrossSiteScripting.txt&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&amp;rdquo; (the file).&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;DOM Detection Value File (string)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter specifies the name of the file that contains the fault detection strings for this \u000d\u000aSmartAttack. This SmartAttack identifies faults by matching observed responses to the strings in \u000d\u000athis file.&lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;font face=\"Lucida Console\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000adata_FD_&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&amp;#160;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;font face=\"Lucida Console\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aCrossSiteScriptingDOM.txt&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&amp;rdquo; (the file).&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:2mm; margin-right:6mm; text-indent:0mm; margin-top:4mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Arial\" color=\"#002e5c\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&lt;b&gt;Report Messages&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis SmartAttack generates the following report output:&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&lt;b&gt;Pass&lt;\/b&gt;:&lt;b&gt; &lt;\/b&gt;&amp;ldquo;No cross-site Scripting vulnerabilities detected.&amp;rdquo;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&lt;b&gt;Vulnerabilities&lt;\/b&gt;:&amp;#160; &amp;ldquo;Cross-site Scripting vulnerability detected.&amp;rdquo;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&lt;b&gt;Warnings&lt;\/b&gt;:&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&amp;#160;&amp;ldquo;No error page in response to cross-site Scripting fault injection.&amp;rdquo;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&amp;#160;&amp;ldquo;Possible cross-site Scripting vulnerability.&amp;rdquo;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a<\/TechnicalDescription>\u000d\u000a          <HowItWorks>&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aCross-Site Scripting (typically referred as XSS) occurs when an attacker can make a different user&amp;rsquo;s \u000abrowser execute malicious script by relaying the script from an otherwise trusted or innocuous Web \u000aapplication. These flaws are extensive on the Web and allow an attacker to place malicious code \u000athat can execute attacks against other users in the security context of the Web applications of the \u000atrusted host. Although the types of attacks vary in sophistication, there is a generally reliable \u000amethod to detect XSS vulnerabilities.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aOne way to test for XSS vulnerabilities is to verify whether an application or web server will \u000arespond to requests containing simple scripts with an HTTP response that could be executed by a \u000abrowser. For example, Sambar Server (version 5.3) is a popular freeware web server with known \u000aXSS vulnerabilities. Sending the server a request such as the following generates a response from \u000athe server that will be executed by a web browser:&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Lucida Console\" size=\"1\"&gt;\u000a&lt;span style=\"font-size:9pt\"&gt;\u000a\/testcgi.exe?&amp;lt;SCRIPT&amp;gt;alert(&amp;ldquo;Cookie&amp;rdquo;+document.cookie)&amp;lt;\/SCRIPT&amp;gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aThe script is executed by the browser because the application generates an error message containing \u000athe original script, and the browser interprets the response as an executable script originating from \u000athe server.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aAll web servers and web applications are potentially vulnerable to this type of misuse, and \u000apreventing such attacks is extremely difficult.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:2mm; margin-right:6mm; text-indent:0mm; margin-top:4mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Arial\" color=\"#002e5c\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&lt;b&gt;Types of XSS&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;ol style=\"margin-top: 0mm; margin-bottom: 0mm; \"&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Times New Roman;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Bold; font-style:Normal; font-decoration:Normal\"&gt;\u000a&lt;b&gt;Reflected XSS&lt;\/b&gt;: This is the most common type of XSS found in virtually all types of Web \u000aapplications. We call an XSS vulnerability as &lt;i&gt;Reflected&lt;\/i&gt; if the echo-back of the malicious \u000ascript happens in one single request-response pair. What this means is if the attacker is \u000aable to generate a malicious request (one containing the script) from the victim&amp;rsquo;s \u000abrowser, then the script is sent back in the immediate response to this request.&lt;br \/&gt;\u000aThis type is the easiest to detect and demonstrate, but also the most underestimated. The \u000aharm that can be caused to a victim is just as severe in this case as in other types of XSS.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Times New Roman;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Bold; font-style:Normal; font-decoration:Normal\"&gt;\u000a&lt;b&gt;Persistent or stored XSS&lt;\/b&gt;: This is another common type of XSS. The only difference \u000abetween this type and a vulnerability of type Reflected is that the echo-back of the \u000amalicious script may not happen in the immediate response, but on some other page of \u000athe Web application. Many times, this type of the vulnerability is also accompanied by \u000athe malicious script getting stored in, say, a database by the Web application. In this case, \u000athe script will be executed for each victim who visits the page where the script is echoed \u000aback.&lt;br \/&gt;\u000aBecause of the difference in the location of injecting the script and the location where it \u000agets executed, this type is harder to detect. Also, in the cases where the script is stored \u000apermanently, the scale of the impact is large, as users may visit a page where the script \u000ashows up and become unintended victims.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Times New Roman;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Bold; font-style:Normal; font-decoration:Normal\"&gt;\u000a&lt;b&gt;DOM-based or local XSS&lt;\/b&gt;: This is an uncommon type of XSS, where some existing, \u000avalid Javascript on the vulnerable page accesses the URL query parameters and puts their \u000acontent, without encoding, on the page. If the attacker is able to load this same URL, but \u000awith a parameter with value as a malicious script, then the valid Javascript works as is, \u000aputs this script on the page and the script gets executed. It is important to note that even \u000awhen the server has not reflected the script, an XSS vulnerability may still be present.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;\/ol&gt;\u000a&lt;p style=\"margin-left:2mm; margin-right:6mm; text-indent:0mm; margin-top:4mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Arial\" color=\"#002e5c\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&lt;b&gt;Exploit&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aA frequent tactic used by malicious websites is to provide a link or popup containing an offsite link \u000awith an embedded executable script. When the user clicks on the link, a request is sent to another \u000aserver that, if vulnerable, will echo the script back to the victim&amp;rsquo;s browser, exploiting the \u000atrust \u000arelationship that exists between the victim and the site that returned the script to the user in \u000aexecutable form.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aOnline message boards, web logs, guestbooks, and user forums where messages can be permanently \u000astored also facilitate Cross-Site Scripting attacks. In these cases, an attacker can post a message \u000ato \u000athe board with a link to a seemingly harmless site, which subtly encodes a script that attacks the \u000auser once they click the link. Attackers can use a wide-range of encoding techniques to hide or \u000aobfuscate the malicious script and, in some cases, can avoid explicit use of the &amp;lt;script&amp;gt; tag. \u000aTypically, XSS attacks involve malicious JavaScript, but it can also involve any type of executable \u000aactive content.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aApplications sometimes accept user-supplied input without filtering it and later return that \u000ainformation to other users. Tests using this SmartAttack inject strings that should be rejected or \u000afiltered out, and then watch for their appearance on subsequent pages or in alerts.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aIt should be noted that, for a Cross-Site Scripting attack involving the user&amp;rsquo;s browser sending \u000aa \u000aspecial request, that request also has to be vulnerable to Cross-Site Request Forgery. This is not a \u000arequirement for a persistent attack where the attack script is already stored on the server, nor it \u000ais \u000arelevant if the attacker uses another means to circumvent anti-Cross-Site Request Forgery measures, \u000asuch as by using Clickjacking.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a<\/HowItWorks>\u000d\u000a          <Impact>&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aCross-Site Scripting enables an attacker to run scripts inside a victim&amp;rsquo;s browser. Using such \u000aa \u000ascript, the attacker can modify the look-and-feel of a page, deface page contents and even steal user \u000acredentials and session information. If an application uses cookies for session management, then a \u000aCross-Site Scripting vulnerability also assists the attacker in exploiting certain session-based attacks \u000asuch as Session Fixation, if present.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aMany Web applications display user input on their Web pages. Depending on whether the input is \u000astored by the application for repeated use (&lt;i&gt;e.g.&lt;\/i&gt; user comments), a Cross-Site Scripting vulnerability \u000amay be &lt;i&gt;reflected&lt;\/i&gt; - &lt;i&gt;i.e.&lt;\/i&gt; usually one time - or &lt;i&gt;persistent&lt;\/i&gt;. A persistent Cross-Site \u000aScripting \u000avulnerability has greater impact than a reflected Cross-Site Scripting vulnerability, because a large \u000anumber of users are affected without elaborate actions on the victims&amp;rsquo; part.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aThe effects of a Cross-Site Scripting vulnerability may range from simple defacement of Web pages \u000ato serious identity theft. For example, a Cross-Site Scripting vulnerability on a page that displays \u000auser-uploaded images could enable an attacker to show offensive images as if they were uploaded \u000aby a legitimate user, while a Cross-Site Scripting vulnerability on a banking Web site may expose \u000athe credentials of customers of the bank. While the offensive image may only affect a handful of \u000ausers and the effect would be more annoyance than real harm, exposure of the credentials poses the \u000athreat of the attacker stealing money from them.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a<\/Impact>\u000d\u000a          <Remediation>&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aThe following general recommendations can help mitigate the risk associated with Cross-Site \u000aScripting vulnerabilities. This is a complex problem area so there is no one simple fix or solution:&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;ul style=\"margin-top: 0mm; margin-bottom: 0mm; \"&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000aEnsure that your web application validates all forms, headers, cookie fields, hidden \u000afields, and parameters, and converts scripts and script tags to a non-executable form.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000aEnsure that any executables on your server do not return scripts in executable form when \u000apassed scripts as malformed command parameters.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000aConsider converting JavaScript and HTML tags into alternate HTML encodings (such as \u000a&amp;ldquo;&amp;lt;&amp;rdquo; to &amp;ldquo;&amp;amp;lt;&amp;gt;.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000aIf your site runs online forums or message boards, disallow the use of HTML tags and \u000aScripting in these areas.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000aKeep up with the latest security vulnerabilities and bugs for all production applications \u000aand servers.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000aUpdate your production servers with the latest XSS vulnerabilities by downloading \u000acurrent patches, and perform frequent security audits on all deployed applications.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;\/ul&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aThe root cause of Cross-Site Scripting is a failure to filter hazardous characters from web \u000aapplication&amp;rsquo;s input and output. The two most critical programming practices you can institute \u000ato \u000aguard against Cross-Site Scripting are:&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;ul style=\"margin-top: 0mm; margin-bottom: 0mm; \"&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000aValidate Input&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000aEncode output&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;\/ul&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aAlways filter data originating from outside your application by disallowing the use of special \u000acharacters. Only display output to the browser that has been sufficiently encoded. When possible, \u000aavoid simple character filters and write routines that validate user input against a set of allowed, \u000asafe characters. Use regular expressions to confirm that data conforms to the allowed character set. \u000aThis enhances application security and makes it harder to bypass input validation routines.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aThere are different tools you can use to validate and encode your data, depending upon your \u000adevelopment environment. Your goal in Cross-Site Scripting attacks remediation should be to filter \u000aand encode all potentially dangerous characters so that the application does not return data that the \u000abrowser will interpret as executable.&amp;#160; Any non-escaped or non-encoded data that is returned to \u000athe \u000abrowser is a potential security risk.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aThe following characters can be harmful and should be filtered whenever they appear in the \u000aapplication input or output. In output, you should translate these characters to their HTML \u000aequivalents before returning data to the browser.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:8mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;&amp;#160;&amp;#160; (&amp;#160;&amp;#160;&amp;#160;&amp;#160; )&amp;#160;&amp;#160;&amp;#160;&amp;#160; [&amp;#160;&amp;#160;&amp;#160;&amp;#160; \u000a]&amp;#160;&amp;#160;&amp;#160;&amp;#160; '&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;quot;&amp;#160;&amp;#160;&amp;#160;&amp;#160; ;&amp;#160;&amp;#160;&amp;#160;&amp;#160; \u000a:&amp;#160;&amp;#160;&amp;#160;&amp;#160; \/&amp;#160;&amp;#160;&amp;#160;&amp;#160; |&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:2mm; margin-right:6mm; text-indent:0mm; margin-top:4mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Arial\" color=\"#002e5c\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&lt;b&gt;PHP&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aThe following PHP functions help mitigate Cross-Site Scripting &lt;b&gt;Vulnerabilities:&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&lt;i&gt;Strip_tags()&lt;\/i&gt; removes HTML and PHP scripting tags from a string.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&lt;i&gt;Utf8_decode()&lt;\/i&gt; converts UTF-8 encoding to single byte ASCII characters. Decoding Unicode input \u000aprior to filtering it can help you detect attacks that the attacker has obfuscated with Unicode \u000aencoding.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&lt;i&gt;Htmlspecialcharacters()&lt;\/i&gt; turns characters such as &amp;amp;,&amp;gt;,&amp;lt;,&amp;rdquo; into their HTML equivalents. \u000aConverting \u000aspecial characters to HTML prevents them from being executable within browsers when sent by an \u000aapplication.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&lt;i&gt;Strtr()&lt;\/i&gt; filters any characters you specify. Make sure to filter&amp;#160; &amp;ldquo;; : ( )&amp;rdquo; characters \u000aso that attackers \u000acannot craft strings that generate alerts. Many XSS attacks are possible without the use of HTML \u000acharacters, so filtering and encoding parentheses mitigates these attacks. For example:&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:8mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;quot; style=&amp;quot;background:url(JavaScript:alert(Malicious Content));&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:2mm; margin-right:6mm; text-indent:0mm; margin-top:4mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Arial\" color=\"#002e5c\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&lt;b&gt;ASP.NET&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aWith ASP.NET, you can use the following functions to help prevent Cross-Site Scripting:&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;ul style=\"margin-top: 0mm; margin-bottom: 0mm; \"&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000aConstrain input submitted via server controls by using ASP.NET validator controls, such \u000aas RegularExpressionValidator, RangeValidator, and \u000aSystem.Text.RegularExpression.Regex. Using these methods as server-side controls to \u000alimit data input to only allowable character sequences by validating input type, length, \u000aformat, and character range.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000aUse the HtmlUtility.HtmlEncode method to encode data if it originates from either a user \u000aor from a database. HtmlEncode replaces special characters with their HTML \u000aequivalents, thus preventing the output from being executable in the browser. Use \u000aHtmlUtility.UrlEncode when writing URLs that may have originated from user input or \u000astored database information.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000aUse the HttpOnly cookie option for added protection.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000aAs a best practice, you should use regular expressions to constrain input to known safe \u000acharacters. Do not rely solely on ASP.NET validateRequest, but use it in addition to your \u000aother input validation and encoding mechanisms.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;\/ul&gt;\u000a&lt;p style=\"margin-left:2mm; margin-right:6mm; text-indent:0mm; margin-top:4mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Arial\" color=\"#002e5c\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&lt;b&gt;Java&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aWhen it comes to writing some validation code, there are two main choices: filtering and encoding.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Arial\" color=\"#333399\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&lt;b&gt;&lt;i&gt;Vulnerable code:&lt;\/i&gt;&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aConsider the following code:&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;% String sid = request.getParameter(&amp;quot;sid&amp;quot;); \u000a%&amp;gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160; ...&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:3mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160; Student ID: &amp;lt;%= sid %&amp;gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aThis code functions correctly when the values of name are as expected. Since there is no validation \u000aof this, things can go awry if the inputs are not as expected. For example, a javascript can be made \u000ato execute that steals cookies. Remediation to prevent these problems is outlined below.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Arial\" color=\"#333399\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&lt;b&gt;&lt;i&gt;Secure code:&lt;\/i&gt;&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000a&lt;span style=\"font-size:11pt\"&gt;\u000a&lt;i&gt;Filtering:&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aThere are two types of filtering: positive and negative filtering.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000a&lt;span style=\"font-size:11pt\"&gt;\u000a&lt;b&gt;&lt;i&gt;Positive Filtering:&lt;\/i&gt;&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aThe safest and most prevalent method of preventing against attack is to only accept data that is valid \u000aand reject everything else. For example, if the data is expected to be alphanumeric, then any input \u000athat is not should be rejected.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160; String Str = request.getParameter(&amp;quot;input&amp;quot;);&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160; String Pattern = &amp;quot;^\\\\d+$&amp;quot;;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160; if (!Str.matches(Pattern))&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:3mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; \/* invalid input, take appropriate action*\/&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000a&lt;span style=\"font-size:11pt\"&gt;\u000a&lt;b&gt;&lt;i&gt;Negative Filtering:&lt;\/i&gt;&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aEven though this is the ideal mechanism, it might not be practical to reject all data. For example, \u000ain \u000ablogging applications, it might be a requirement to allow the user to use html format to input data. \u000aIn this case, check for the existence of special characters within the data. These characters can be \u000areplaced with other characters, such as a space.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160; \/* regular expression that&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160; * tests for the existence of malicious characters&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160; * and replaces them with a space. *\/&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160; String Pattern=&amp;quot;[&amp;lt;&amp;gt;{}\\\\[\\\\];\\\\&amp;amp;]&amp;quot;;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:3mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160; String Str = s.replaceAll(Pattern,&amp;quot; &amp;quot;);&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000a&lt;span style=\"font-size:11pt\"&gt;\u000a&lt;b&gt;&lt;i&gt;Encoding:&lt;\/i&gt;&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aTo ensure that the generated pages are properly encoded for a Web server, use a simple mechanism \u000arather than an application.&amp;#160; Pass each character in the dynamic content through an encoding \u000afunction where the scripting tags in the dynamic content are encoded.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aA tag library is made up of one or more classes and an XML tag library description file, which \u000adictates the new tag names and valid attributes for those tags. Tag handlers determine how the tags, \u000atheir attributes, and their bodies are interpreted and processed at request time from inside a JSP \u000apage.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aExamples of Encoding Functions are below:&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000apublic int Encode () throws Exception {&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160;&amp;#160; StringBuffer sbuf = new StringBuffer();&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160;&amp;#160; char[] chars = property.toCharArray();&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160;&amp;#160; for (int i = 0; i &amp;lt; chars.length; i++)&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; sbuf.append(&amp;quot;&amp;amp;#&amp;quot; + (int) chars[i]);&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160;&amp;#160; try&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160;&amp;#160; {&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; pageContext.getOut().print(sbuf.toString());&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160;&amp;#160; } catch (IOException ex) {&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; throw new JspException(ex.getMessage());&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160;&amp;#160; }&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160;&amp;#160; return;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:3mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;}&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000a&lt;span style=\"font-size:11pt\"&gt;\u000a&lt;i&gt;Java HTML Encoding Function&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;public static String HTMLEncode(String aTagFragment){&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160;&amp;#160; final StringBuffer result = new StringBuffer();&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160;&amp;#160; final StringCharacterIterator iterator = new&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; \u000aStringCharacterIterator(aTagFragment);&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160;&amp;#160; char character =&amp;#160; iterator.current();&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160;&amp;#160; while (character != StringCharacterIterator.DONE )&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160;&amp;#160; {&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; if (character == '&amp;lt;')&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; result.append(&amp;quot;&amp;amp;lt;&amp;quot;);&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; else if (character == '&amp;gt;')&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; result.append(&amp;quot;&amp;amp;gt;&amp;quot;);&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; else if (character == '\\&amp;quot;')&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; result.append(&amp;quot;&amp;amp;quot;&amp;quot;);&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; else if (character == '\\'')&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; result.append(&amp;quot;&amp;amp;#039;&amp;quot;);&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; else if (character == '\\\\')&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; result.append(&amp;quot;&amp;amp;#092;&amp;quot;);&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; else if (character == '&amp;amp;')&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; result.append(&amp;quot;&amp;amp;amp;&amp;quot;);&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; else {&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; \/\/the char is not a special one&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; \/\/add it to the result as is&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; result.append(character);&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; }&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; character = iterator.next();&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160;&amp;#160; }&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160;&amp;#160; return result.toString();&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160; }&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&lt;br \/&gt;\u000a&lt;\/span&gt;\u000a&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:2mm; margin-right:6mm; text-indent:0mm; margin-top:4mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Arial\" color=\"#002e5c\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&lt;b&gt;ColdFusion&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:3mm; margin-right:0mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000a&lt;span style=\"font-size:11pt\"&gt;\u000a&lt;b&gt;&lt;i&gt;Generic&lt;\/i&gt;&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:3mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aColdFusion provides a number of ways to filter or validate user input. The security measures span \u000aboth client-side and server-side filtering. Where possible, implement your security controls on the \u000aserver-side to avoid tampering of your controls via a Man-In-The-Middle (MITM) proxy. An \u000aattacker can easily bypass client-side controls by using such a program to modify the underlying \u000aHTTP Request as it passes between the proxy and the web application. Additionally, we \u000arecommend that sites using ColdFusion should configure their application using the recommended \u000asecurity features of the Adobe ColdFusion 8 Developers Guide, or the guide relevant to your \u000aversion of ColdFusion.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:3mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aColdFusion Data validation allows you to control the type of data that is allowed as well as to \u000aensure that user-supplied data corresponds to the correct form.&amp;#160; Attentive data validation procedures \u000acan have the following benefits:&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;ul style=\"margin-top: 0mm; margin-bottom: 0mm; \"&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000aEnhance the security of your application by ensuring that malicious users cannot input \u000adata that exploits a security vulnerability, such as SQL Injection, XSS, or buffer \u000aoverflows.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000aEnhance application resilience by rejecting invalid data on the server-side prior to \u000aprocessing the input.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000aEnhance application usability by providing the user with feedback that allows them to \u000acorrect their mistakes, while not generating verbose error messages.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;\/ul&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aThe list below gives you an overview of the available data validation tags, as well as their \u000avalidation type (server vs. client side) methods. For a more detailed explanation consult your \u000aColdFusion Developers resources on the CFML language and its security features:&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;ul style=\"margin-top: 0mm; margin-bottom: 0mm; \"&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Italic; font-decoration:Normal\"&gt;\u000a&lt;i&gt;Mask&lt;\/i&gt;, &lt;b&gt;client&lt;\/b&gt;: Applies to cfinput tags on the client-side. The use of Mask creates a \u000aJavascript or ActionScript control that verifies that input corresponds to a specified \u000apattern. For example: nnn-nnn-nnnn where &amp;ldquo;n&amp;rdquo; is an integer. Note, this is a client-side \u000acontrol that can be easily bypassed.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Italic; font-decoration:Normal\"&gt;\u000a&lt;i&gt;onBlur, &lt;\/i&gt;&lt;b&gt;client&lt;\/b&gt;: Applies to cfinput and cftextarea tags. &lt;i&gt;onBlur &lt;\/i&gt;creates a JavaScript \u000athat \u000aruns in the browser and checks that user supplied data matches a corresponding pattern. \u000aCan be bypassed by a MITM proxy.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Italic; font-decoration:Normal\"&gt;\u000a&lt;i&gt;onSubmit&lt;\/i&gt;&lt;b&gt;&lt;i&gt;, &lt;\/i&gt;&lt;\/b&gt;&lt;b&gt;client&lt;\/b&gt;: Applies to the Web browser when the user clicks submit. \u000aChecks that \u000athe data passed from the browser corresponds to a specified pattern. Can be bypassed by \u000aMITM proxy.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Italic; font-decoration:Normal\"&gt;\u000a&lt;i&gt;onServer,&lt;\/i&gt;&lt;b&gt;&lt;i&gt; &lt;\/i&gt;&lt;\/b&gt;&lt;b&gt;server&lt;\/b&gt;: Applies to server-side data after the form is submitted. \u000aColdFusion \u000achecks the form data of cfinput and cftextarea tags and generates an error page if the data \u000ais not valid. Use this tag in conjunction with the cferror tag to specify the validation error \u000apage. Note: a failure to specify an error page will result in an information leak in your \u000aerror handling routine, as ColdFusion errors are verbose.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Italic; font-decoration:Normal\"&gt;\u000a&lt;i&gt;IsValid&lt;\/i&gt;, &lt;b&gt;server: &lt;\/b&gt;Tests an input variable to determine if the content of the variable meets \u000ainternal validation rules. The&lt;b&gt; &lt;\/b&gt;&lt;i&gt;IsValid&lt;\/i&gt; function returns true or false for the variable.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Italic; font-decoration:Normal\"&gt;\u000a&lt;i&gt;Cfparam, &lt;\/i&gt;&lt;b&gt;server: &lt;\/b&gt;Tests an input variable to determine if the variable meets validation \u000acriteria. If the variable does not meet the criteria an expression exception is generated.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Italic; font-decoration:Normal\"&gt;\u000a&lt;i&gt;Cfqueryparam, &lt;\/i&gt;&lt;b&gt;server: &lt;\/b&gt;Evaluates the content of a HTTP query string to validate whether \u000athe string meets validation criteria.&amp;#160; This tag is useful for scrubbing HTTP query strings \u000aprior to further processing.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;\/ul&gt;\u000a&lt;p style=\"margin-left:3mm; margin-right:0mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000a&lt;span style=\"font-size:11pt\"&gt;\u000a&lt;b&gt;&lt;i&gt;ColdFusion Scriptprotect&lt;\/i&gt;&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:3mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aIn addition to the data validation techniques available in the CFML language ColdFusion also \u000aprovides a Scriptprotect setting to further assist in the prevention of Cross-Site Scripting. The \u000aColdFusion administrator should configure the Scriptprotect method in Application.cfm, under the \u000aEnable Global Script Protection setting. Using this setting will help to protect user input from \u000aCross-Site Scripting, however, use of the global Scriptprotect method should not be a substitute for \u000aindividual form and parameter validation techniques.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a<\/Remediation>\u000d\u000a        <\/SmartAttackInfo>\u000d\u000a        <ReportItems \/>\u000d\u000a        <Categories>\u000d\u000a          <Category>\u000d\u000a            <Name>OWASP-2013<\/Name>\u000d\u000a          <\/Category>\u000d\u000a        <\/Categories>\u000d\u000a      <\/SmartAttacksData>\u000d\u000a      <SmartAttacksData>\u000d\u000a        <SmartAttackInfo PolicyId=\"67a127f2-85fc-4797-8092-d4fe2312acef\" PolicyVersion=\"1.2\" CenzicId=\"CPL0002110\" Severity=\"Default\" VulnerabilityIds=\"CWE-548\">\u000d\u000a          <SmartAttackName>Directory Browsing - [OWASP 2013 A 5]<\/SmartAttackName>\u000d\u000a          <Description>&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aDirectory Browsing is a vulnerability caused by unintentionally disclosing directory listings to \u000ausers.&amp;#160; The SmartAttack attempts to retrieve and identify such listings and reports them as \u000avulnerabilities based on the assumption that the listings are unintended.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a<\/Description>\u000d\u000a          <TechnicalDescription>&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&lt;b&gt; &lt;\/b&gt;Directories on the web server or applications are typically locked down to prevent remote browsing \u000d\u000awhen the directory contains executables, text files, documentation, or application-related install or \u000d\u000aconfiguration materials. In such cases either the entire directory is configured to block access, or \u000d\u000aaccess is granted on a per file basis, requiring a precise request to access objects in the directory. \u000d\u000aDirectory listing can be prevented in server configuration files, but may also arise from \u000d\u000avulnerability in a particular application.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aObtaining directory lists allows an attacker to map out the server&amp;rsquo;s directory structure and identify \u000d\u000apotentially vulnerable files and sample applications. Often, an attacker will use the information \u000d\u000agained from directory listings to plan additional attacks against the server. Obtaining directory lists \u000d\u000ais also useful because it provides a means for determining if other vulnerabilities are present or \u000d\u000awhether particular application attacks are successful (i.e., by testing whether or not it is possible \u000d\u000ato \u000d\u000acreate files on the server via a security vulnerability in a particular script or service).&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;ol style=\"margin-bottom: 0mm; \"&gt;\u000d\u000a&lt;ol style=\"margin-bottom: 0mm; \"&gt;\u000d\u000a&lt;ol style=\"margin-bottom: 0mm; \"&gt;\u000d\u000a&lt;li style=\"margin-left: -47pt; margin-right: 18pt; padding-left: 0pt; \"&gt;\u000d\u000a&lt;font face=\"Arial\" color=\"#002e5c\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&lt;b&gt;To Use&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/li&gt;\u000d\u000a&lt;\/ol&gt;\u000d\u000a&lt;\/ol&gt;\u000d\u000a&lt;\/ol&gt;\u000d\u000a&lt;ol style=\"margin-top: 0mm; margin-bottom: 0mm; \"&gt;\u000d\u000a&lt;ol style=\"margin-top: 0mm; margin-bottom: 0mm; \"&gt;\u000d\u000a&lt;li style=\"margin-left: -3pt; margin-right: 18pt; padding-left: 0pt; font-family: Times New Roman;  color: #010101;  \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000d\u000aCreate a traversal that represents the target application, or a subset of specific pages in \u000d\u000athe application.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/li&gt;\u000d\u000a&lt;li style=\"margin-left: -3pt; margin-right: 18pt; padding-left: 0pt; font-family: Times New Roman;  color: #010101;  \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000d\u000aCreate a new job or open an existing job.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/li&gt;\u000d\u000a&lt;li style=\"margin-left: -3pt; margin-right: 18pt; padding-left: 0pt; font-family: Times New Roman;  color: #010101;  \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000d\u000aAdd the traversal created above to the job.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/li&gt;\u000d\u000a&lt;li style=\"margin-left: -3pt; margin-right: 18pt; padding-left: 0pt; font-family: Times New Roman;  color: #010101;  \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000d\u000aAdd this SmartAttack to the job.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/li&gt;\u000d\u000a&lt;li style=\"margin-left: -3pt; margin-right: 18pt; padding-left: 0pt; font-family: Times New Roman;  color: #010101;  \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000d\u000aSet the parameters or accept the defaults in the job. (See below.)&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/li&gt;\u000d\u000a&lt;li style=\"margin-left: -3pt; margin-right: 18pt; padding-left: 0pt; font-family: Times New Roman;  color: #010101;  \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000d\u000aRun the job.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/li&gt;\u000d\u000a&lt;\/ol&gt;\u000d\u000a&lt;\/ol&gt;\u000d\u000a&lt;ol style=\"margin-bottom: 0mm; \"&gt;\u000d\u000a&lt;ol style=\"margin-bottom: 0mm; \"&gt;\u000d\u000a&lt;ol style=\"margin-bottom: 0mm; \"&gt;\u000d\u000a&lt;li style=\"margin-left: -47pt; margin-right: 18pt; padding-left: 0pt; \"&gt;\u000d\u000a&lt;font face=\"Arial\" color=\"#002e5c\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&lt;b&gt;Parameters&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;ol style=\"margin-top: 0mm; margin-bottom: 0mm; \"&gt;\u000d\u000a&lt;li style=\"margin-left: -15pt; margin-right: 18pt; padding-left: 0pt; \"&gt;\u000d\u000a&lt;font face=\"Arial\" color=\"#333399\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&lt;b&gt;&lt;i&gt;Optional&lt;\/i&gt;&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/li&gt;\u000d\u000a&lt;\/ol&gt;\u000d\u000a&lt;\/li&gt;\u000d\u000a&lt;\/ol&gt;\u000d\u000a&lt;\/ol&gt;\u000d\u000a&lt;\/ol&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Check Local Source Directories (Boolean)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter specifies whether to search for URLs in &lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;font face=\"Lucida Console\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000asrc&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&amp;#160;references.&lt;br \/&gt;\u000d\u000aDefault = &amp;ldquo;true&amp;rdquo;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Pages To Access (match expression)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis match expression must evaluate to true for a page to be a considered by this SmartAttack. &lt;br \/&gt;\u000d\u000aDefault = &amp;ldquo;:true::&amp;rdquo;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;ol style=\"margin-top: 0mm; margin-bottom: 0mm; \"&gt;\u000d\u000a&lt;ol style=\"margin-top: 0mm; margin-bottom: 0mm; \"&gt;\u000d\u000a&lt;ol style=\"margin-top: 0mm; margin-bottom: 0mm; \"&gt;\u000d\u000a&lt;ol style=\"margin-top: 0mm; margin-bottom: 0mm; \"&gt;\u000d\u000a&lt;li style=\"margin-left: -62pt; margin-right: 18pt; padding-left: 0pt; \"&gt;\u000d\u000a&lt;font face=\"Arial\" color=\"#333399\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&lt;b&gt;&lt;i&gt;Advanced&lt;\/i&gt;&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/li&gt;\u000d\u000a&lt;\/ol&gt;\u000d\u000a&lt;\/ol&gt;\u000d\u000a&lt;\/ol&gt;\u000d\u000a&lt;\/ol&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Max Traversal Restarts (integer)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter controls whether and how many times a fault injector will attempt to restart a \u000d\u000atraversal if fault injection interferes with replaying the traversal. The parameter can be set to &amp;ldquo;0&amp;rdquo; \u000d\u000ato \u000d\u000aprevent the traversal from being restarted. &lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;0&amp;rdquo;.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Message: Vulnerability Found (string)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aMessage to generate when a directory listing is found.&lt;br \/&gt;\u000d\u000aDefault = &amp;ldquo;Directory listing found&amp;rdquo;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Message: No Vulnerability Found (string)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aMessage to generate when all requests for a directory listing are denied.&lt;br \/&gt;\u000d\u000aDefault = &amp;ldquo;No directory listings found&amp;rdquo;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;List of Common Directories (string)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aSpecifies a text file containing a list of common directories for additional testing by the \u000d\u000aSmartAttack.&lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;font face=\"Lucida Console\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000adata_CommonDirectories.txt&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&amp;rdquo; (the file).&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;ol style=\"margin-bottom: 0mm; \"&gt;\u000d\u000a&lt;ol style=\"margin-bottom: 0mm; \"&gt;\u000d\u000a&lt;ol style=\"margin-bottom: 0mm; \"&gt;\u000d\u000a&lt;li style=\"margin-left: -47pt; margin-right: 18pt; padding-left: 0pt; \"&gt;\u000d\u000a&lt;font face=\"Arial\" color=\"#002e5c\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&lt;b&gt;Report Messages&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/li&gt;\u000d\u000a&lt;\/ol&gt;\u000d\u000a&lt;\/ol&gt;\u000d\u000a&lt;\/ol&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&lt;b&gt;Pass&lt;\/b&gt;: &amp;ldquo;No directory listings found&amp;rdquo;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&lt;b&gt;Vulnerabilities&lt;\/b&gt;: &amp;ldquo;Directory listing found&amp;rdquo;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;div align=\"left\"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:12pt\"&gt;\u000d\u000a&amp;#160;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/div&gt;\u000d\u000a<\/TechnicalDescription>\u000d\u000a          <HowItWorks>&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aThe SmartAttack examines each page and attempts to access directory listing for the page by \u000amaking an http request using the url of the parent directory of the page.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a<\/HowItWorks>\u000d\u000a          <Impact>&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aIf a Web application is vulnerable to directory browsing, an attacker can gain information about the \u000aweb application by browsing directory listings that reveal files and folder hierarchy in the \u000aapplication. These resources may store sensitive information about web applications and \u000aoperational systems, such as source code, credentials, internal network addressing, and so on which \u000acan be used to exploit vulnerabilities in the web application.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aInformation leakage occurs when a web site reveals sensitive data, such as authentication \u000ainformation, absolute or relative paths, which may aid an attacker in exploiting the system. While \u000aleakage through such directory listings does not necessarily represent a breach in security, it does \u000agive an attacker useful guidance for future exploitation. Leakage of sensitive information may carry \u000avarious levels of risk and should be limited whenever possible.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aFor example, any attacker can guess file and directory names not intended for public viewing. The \u000afiles\/paths often have common naming convention and reside in standard locations. Hence by \u000amaking educated guesses an attacker can attain absolute path.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a<\/Impact>\u000d\u000a          <Remediation>&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aObtaining directory lists gives an attacker useful information when planning attacks against your \u000aserver or your application. Follow these guidelines to prevent unintended information disclosure:&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;ul style=\"margin-top: 0mm; margin-bottom: 0mm; \"&gt;\u000a&lt;li style=\"margin-left: 5pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000aCheck the access permissions on the affected directories and configure them to prevent \u000aaccess.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 5pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000aConfigure the server to disallow directory listing on the affected directories.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 5pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000aExamine your applications and if the directory list was obtained by exploiting a known bug or \u000avulnerability, contact the vendor or maintainer for a patch.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 5pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000aIf the directory listing is exploitable in a custom application then review the code and prevent \u000amalformed strings or tricked URI&amp;rsquo;s from bypassing the filters or input validation you are \u000aapplying to directory GET requests.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;\/ul&gt;\u000a<\/Remediation>\u000d\u000a        <\/SmartAttackInfo>\u000d\u000a        <ReportItems \/>\u000d\u000a        <Categories>\u000d\u000a          <Category>\u000d\u000a            <Name>OWASP-2013<\/Name>\u000d\u000a          <\/Category>\u000d\u000a        <\/Categories>\u000d\u000a      <\/SmartAttacksData>\u000d\u000a      <SmartAttacksData>\u000d\u000a        <SmartAttackInfo PolicyId=\"dcf21a79-0c4f-4b8c-9d0b-f12dc3955c25\" PolicyVersion=\"1.2\" CenzicId=\"CPL0002122\" Severity=\"Default\" VulnerabilityIds=\"CWE-209\">\u000d\u000a          <SmartAttackName>SQL Error Message - [OWASP 2013 A 1]<\/SmartAttackName>\u000d\u000a          <Description>&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aSQL Error Message, or SQL Exception, is a vulnerability caused by a Web application inserting \u000auser input in a SQL query without validation and failing to suppress error messages that may result \u000afrom use of such input. This SmartAttack injects SQL characters in order to cause errors in SQL \u000aexecution, and looks for evidence of such errors.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a<\/Description>\u000d\u000a          <TechnicalDescription>&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aTests with this SmartAttack inject specially formatted strings designed to create SQL statements \u000d\u000athat are not valid. The SmartAttack identifies a failure when it detects that the application generated \u000d\u000aan SQL error.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis SmartAttack can fault inject fields in HTTP queries (which typically correspond to fields in \u000d\u000aforms), particular HTTP headers, and cookies. By default, it injects fields in HTTP queries. Because \u000d\u000ait injects all such fields, it may cause problems with the application or database bloat. Hence, it \u000d\u000ais \u000d\u000anot safe to be used for applications that are live.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis SmartAttack works with all kinds of traversals. The SmartAttack walks the traversal and \u000d\u000aidentifies HTTP requests which are candidates for fault injection. For each candidate request, the \u000d\u000aSmartAttack sends a series of fault-injected requests, trying a variety of problematic strings.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThe SmartAttack can also be configured to recognize error pages that are received in response to \u000d\u000afault-injected input, allowing it to ignore legitimate responses that might otherwise appear to be \u000d\u000afaults. There are several options governing the fault injection functionality, as detailed in the \u000d\u000aParameters section below.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:2mm; margin-right:6mm; text-indent:0mm; margin-top:4mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Arial\" color=\"#002e5c\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&lt;b&gt;To Use&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;ol style=\"margin-top: 0mm; margin-bottom: 0mm; \"&gt;\u000d\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Times New Roman;  color: #010101;  \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000d\u000aCreate a traversal that represents the target application, or a subset of specific pages in \u000d\u000athe application.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/li&gt;\u000d\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Times New Roman;  color: #010101;  \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000d\u000aCreate a new Assessment or open an existing Assessment.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/li&gt;\u000d\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Times New Roman;  color: #010101;  \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000d\u000aAdd the traversal created above to the Assessment.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/li&gt;\u000d\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Times New Roman;  color: #010101;  \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000d\u000aAdd this SmartAttack to the Assessment.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/li&gt;\u000d\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Times New Roman;  color: #010101;  \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000d\u000aSet the parameters or accept the defaults in the Assessment. (See below.)&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/li&gt;\u000d\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Times New Roman;  color: #010101;  \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000d\u000aRun the Assessment.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/li&gt;\u000d\u000a&lt;\/ol&gt;\u000d\u000a&lt;p style=\"margin-left:2mm; margin-right:6mm; text-indent:0mm; margin-top:4mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Arial\" color=\"#002e5c\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&lt;b&gt;To Verify&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aHere are the steps to be followed to manually verify a vulnerability reported by this SmartAttack:&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;ol style=\"margin-top: 0mm; margin-bottom: 0mm; \"&gt;\u000d\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Times New Roman;  color: #010101;  \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000d\u000aNote the field shown to be vulnerable and the injection value used from the report item.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;ol type=\"a\" style=\"margin-top: 0mm; margin-bottom: 0mm; \"&gt;\u000d\u000a&lt;li style=\"margin-left: 10pt; margin-right: 18pt; padding-left: 0pt; font-family: Times New Roman;  color: #010101;  \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000d\u000aThe plain text form of the injection value and the vulnerable field is specified in \u000d\u000athe &amp;lsquo;Item Details&amp;rsquo; tab of the report item.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/li&gt;\u000d\u000a&lt;li style=\"margin-left: 10pt; margin-right: 18pt; padding-left: 0pt; font-family: Times New Roman;  color: #010101;  \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000d\u000aThe exact form of the injection value is also highlighted in the &amp;lsquo;HTTP Request&amp;rsquo; \u000d\u000atab when it is opened after double-clicking on the report item first.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/li&gt;\u000d\u000a&lt;\/ol&gt;\u000d\u000a&lt;\/li&gt;\u000d\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Times New Roman;  color: #010101;  \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000d\u000aNote the URL and the request shown to contain the vulnerable field from the report item \u000d\u000a&amp;lsquo;Item Details&amp;rsquo; and &amp;lsquo;HTTP Request&amp;rsquo; tabs.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/li&gt;\u000d\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Times New Roman;  color: #010101;  \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000d\u000aUsing the sequence view and a replay of the traversal, determine the sequence of actions \u000d\u000athat led to generation of this request.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/li&gt;\u000d\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Times New Roman;  color: #010101;  \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000d\u000aFrom a normal browser, follow this sequence to reach the page from which the request \u000d\u000awas generated. At this point, follow one of these two approaches while performing the \u000d\u000alast step in the sequence of actions to generate the vulnerable request:&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;ol type=\"a\" style=\"margin-top: 0mm; margin-bottom: 0mm; \"&gt;\u000d\u000a&lt;li style=\"margin-left: 10pt; margin-right: 18pt; padding-left: 0pt; font-family: Times New Roman;  color: #010101;  \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000d\u000aFind the vulnerable field and insert the plain form of the injection value in it and \u000d\u000aperform the last step to generate the vulnerable request.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/li&gt;\u000d\u000a&lt;li style=\"margin-left: 10pt; margin-right: 18pt; padding-left: 0pt; font-family: Times New Roman;  color: #010101;  \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000d\u000aIf the vulnerable field is hidden, or if the plain form of the injection value is \u000d\u000asame as the exact form used, then perform the last step, but use an intercepting \u000d\u000aHTTP proxy such as Paros or WebScarab to trap the vulnerable request. Then, \u000d\u000ainsert the exact form of the injection value in place of the value of the field and \u000d\u000asend the request.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/li&gt;\u000d\u000a&lt;\/ol&gt;\u000d\u000a&lt;\/li&gt;\u000d\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Times New Roman;  color: #010101;  \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000d\u000aIn the page that results from this injected request, look for evidence of a SQL error \u000d\u000amessage. If the message is not evident, you can search for the evidence provided by the \u000d\u000aSmartAttack as follows:&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;ol type=\"a\" style=\"margin-top: 0mm; margin-bottom: 0mm; \"&gt;\u000d\u000a&lt;li style=\"margin-left: 10pt; margin-right: 18pt; padding-left: 0pt; font-family: Times New Roman;  color: #010101;  \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000d\u000aThe text that was matched by this SmartAttack to deduce a vulnerability is also \u000d\u000apresent in the &amp;lsquo;Item Details&amp;rsquo; tab of report item.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/li&gt;\u000d\u000a&lt;li style=\"margin-left: 10pt; margin-right: 18pt; padding-left: 0pt; font-family: Times New Roman;  color: #010101;  \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000d\u000aThe exact value is also highlighted in the &amp;lsquo;HTTP Request&amp;rsquo; tab of the dialog that \u000d\u000ais opened after double-clicking on the report item first.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/li&gt;\u000d\u000a&lt;\/ol&gt;\u000d\u000a&lt;\/li&gt;\u000d\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Times New Roman;  color: #010101;  \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000d\u000aIf the SQL error message is found, then the vulnerability is verified.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/li&gt;\u000d\u000a&lt;\/ol&gt;\u000d\u000a&lt;p style=\"margin-left:2mm; margin-right:6mm; text-indent:0mm; margin-top:4mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Arial\" color=\"#002e5c\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&lt;b&gt;Parameters&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Arial\" color=\"#333399\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&lt;b&gt;&lt;i&gt;Optional&lt;\/i&gt;&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Attacks&lt;\/i&gt; &lt;i&gt;to&lt;\/i&gt; &lt;i&gt;Delay&amp;#160;&amp;#160; (list of regular expressions)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter is a set of regular expressions that will be used to identify requests for which attacks \u000d\u000ashould be delayed until the end of the traversal (such as login requests). If you wish to include \u000d\u000aslashes in your URL pattern, you must escape them with a backslash as slashes are meta-characters \u000d\u000ain regular expressions.&lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;login&amp;rdquo;.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Inject Form Field (Boolean)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter controls whether HTTP query fields will be injected. By default, all fields will be \u000d\u000ainjected. &lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;true&amp;rdquo;.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Inject Cookies (Boolean)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter controls whether individual cookies in the &amp;ldquo;Cookie&amp;rdquo; header (if present) will \u000d\u000abe \u000d\u000ainjected. &lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;false&amp;rdquo;.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Inject A Field At A Time (Boolean)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter specifies that fault injection should happen by injecting one item at a time instead \u000d\u000aof \u000d\u000aall at once. The injectable items are elements of GET or POST queries, individual headers, or \u000d\u000acookies. Field-at-a-time injection can take considerably longer but might uncover vulnerabilities \u000d\u000athat would not be found with all-at-once injection. (The reason for this is that some forms employ \u000d\u000ainput validation only on some but not all fields. With all-at-once injection, if &lt;i&gt;any&lt;\/i&gt; of the fields \u000d\u000areject \u000d\u000aan input, vulnerabilities in non-validated fields will remain undetected.)&lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;true&amp;rdquo;.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Stop On First Fault (Boolean)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter controls whether the SmartAttack will stop on the first fault discovered on a page. \u000d\u000aThe default is to test all of the fault injection values on each page.&lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;true&amp;rdquo;.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Error Page Regular Expression (regular expression)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter specifies a regular expression pattern which will be used to identify error pages by \u000d\u000amatching a string in their content. Such error pages will be excluded from fault detection. This \u000d\u000amechanism is useful as a way of eliminating false positives.&lt;br \/&gt;\u000d\u000aThe default value is empty (no regular expression).&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;URLs To Skip (list of regular expressions)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter specifies a list of regular expression patterns which will be matched against the \u000d\u000aURL of each HTTP request that is a candidate for fault injection. If the URL matches one of the \u000d\u000apatterns in the skip list, the request will not be fault injected.&lt;br \/&gt;\u000d\u000aThe default value is an empty list.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Fields To Skip (list of regular expressions)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter specifies a list of regular expression patterns which will be used to identify form \u000d\u000afield and cookie names that should be excluded from fault injection.&lt;br \/&gt;\u000d\u000aThe default value is an empty list.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;URLs To Inject (list of regular expressions)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter specifies a list of regular expression patterns which will be matched against the \u000d\u000aURL of each HTTP request that is a candidate for fault injection. If the URL matches one of the \u000d\u000apatterns in the inject list, only then the request will be fault injected. An empty list means all \u000d\u000arequests will be injected, subject to other parameter settings.&lt;br \/&gt;\u000d\u000aThe default value is an empty list.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Fields To Inject (list of regular expressions)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter specifies a list of regular expression patterns which will be used to identify form \u000d\u000afield and cookie names that should be fault injected. Any field that is not on this list will not be \u000d\u000ainjected. An empty list means all fields will be injected, subject to other parameter settings.&lt;br \/&gt;\u000d\u000aThe default value is an empty list.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Report Individual Successes (Boolean)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter controls whether the SmartAttack will issue a &amp;ldquo;Pass&amp;rdquo; report item for every \u000d\u000arequest \u000d\u000a(form) that was injected with no vulnerabilities being found. By default, the parameter is false.&lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;false&amp;rdquo;.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Injection String Groups (enumeration)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter controls which subsets of fault injection strings are used in a test. The strings are \u000d\u000adivided into &amp;ldquo;Set #1,&amp;rdquo; &amp;ldquo;Set #2,&amp;rdquo; &amp;ldquo;Set #3,&amp;rdquo; and &amp;ldquo;Set #4,&amp;rdquo; \u000d\u000awhere the first group consists of just a few \u000d\u000afault injection values (those that are typically the most effective) and the following groups add more \u000d\u000astrings. The fourth group is very large and should be run only when comprehensive testing is the \u000d\u000apriority and the amount of time consumed by the job run is not. The groups are mutually exclusive \u000d\u000aand not supersets of each other, and you can choose to run some and not others. Specifying no \u000d\u000agroups results in all strings being used.&lt;br \/&gt;\u000d\u000aThe default is to use the following fault injection string groups: [&amp;ldquo;Set #1&amp;rdquo;, &amp;ldquo;Set \u000d\u000a#2&amp;rdquo;, &amp;ldquo;Set #3&amp;rdquo;].&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Arial\" color=\"#333399\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&lt;b&gt;&lt;i&gt;Advanced&lt;\/i&gt;&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Max Traversal Restarts (integer)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter controls whether and how many times a fault injector will attempt to restart a \u000d\u000atraversal if fault injection interferes with replaying the traversal. The parameter can be set to &amp;ldquo;0&amp;rdquo; \u000d\u000ato \u000d\u000aprevent the traversal from being restarted. &lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;4&amp;rdquo;.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:0mm; margin-right:6mm; text-indent:9mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Make Requests Using Sockets (Boolean)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter controls whether browsing requests will be performed using HTTP sockets. The \u000d\u000aparameter can be unchecked to make sure that even the concurrent browsing requests are made \u000d\u000athrough Mozilla windows.&lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;true&amp;rdquo; (checked).&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Start SmartAttack After Traversal (Boolean)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis is an advanced parameter that controls whether the fault injection begins during the traversal \u000d\u000aor \u000d\u000aat the conclusion of the traversal. The default is to process fault injection during the traversal, \u000d\u000ahowever, in some cases, the fault injection itself will change or prematurely terminate the path of \u000d\u000athe traversal. In such cases, setting this parameter to &amp;lsquo;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;font face=\"Lucida Console\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000atrue&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&amp;rsquo; will postpone fault injection until after \u000d\u000athe traversal has completed, which allows all of the injectable requests in the traversal to be \u000d\u000acollected and fault injected after the traversal is over.&amp;#160;Note that, while this allows all of the \u000d\u000afault \u000d\u000ainjections to occur, they might not occur in the same context or state that they would have during \u000d\u000athe traversal. &lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;false&amp;rdquo;.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Skip First N Injectable Requests (integer)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis is an advanced parameter that specifies the number of the injectable request on which fault \u000d\u000ainjection will begin, allowing previous requests to be exempted from fault injection. In some cases, \u000d\u000atraversals are unable to complete due to fault injection. In such cases, this parameter can be used \u000d\u000ato \u000d\u000apick up fault injection after the point where the traversal was compromised in a previous job \u000d\u000arun.&amp;#160;You can identify the field where you wish to start and enter that number in this parameter \u000d\u000afrom \u000d\u000areport items. The SmartAttack identifies the number of each request being injected and shows it in \u000d\u000athe report.&lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;0&amp;rdquo;.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Headers To Inject (list of strings)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter indicates which HTTP headers (if any) will be injected. The parameter should \u000d\u000aspecify a list of strings with HTTP header names. By default, no HTTP headers will be fault \u000d\u000ainjected. Valid headers are &amp;quot;Accept&amp;quot;, &amp;quot;Accept-Charset&amp;quot;, &amp;quot;Accept-Encoding&amp;quot;, \u000d\u000a&amp;quot;Accept-Language&amp;quot;, \u000d\u000a&amp;quot;Allow&amp;quot;, &amp;quot;Authorization&amp;quot;, &amp;quot;Cache-Control&amp;quot;, &amp;quot;Connection&amp;quot;, &amp;quot;Content-Encoding&amp;quot;, \u000d\u000a&amp;quot;Content-\u000d\u000aLanguage&amp;quot;, &amp;quot;Content-Length&amp;quot;, &amp;quot;Content-Location&amp;quot;, &amp;quot;Content-MD5&amp;quot;, &amp;quot;Content-Range&amp;quot;, \u000d\u000a&amp;quot;Content-\u000d\u000aType&amp;quot;, &amp;quot;Cookie&amp;quot;, &amp;quot;Date&amp;quot;, &amp;quot;Expect&amp;quot;, &amp;quot;Expires&amp;quot;, &amp;quot;From&amp;quot;, \u000d\u000a&amp;quot;Host&amp;quot;, &amp;quot;If-Match&amp;quot; &amp;quot;If-Modified-Since&amp;quot;, &amp;quot;If-\u000d\u000aNone-Match&amp;quot;, &amp;quot;If-Range&amp;quot;, &amp;quot;If-Unmodified-Since&amp;quot;, &amp;quot;Last-Modified&amp;quot;, \u000d\u000a&amp;quot;Location&amp;quot;, &amp;quot;Max-Forwards&amp;quot;, \u000d\u000a&amp;quot;Pragma&amp;quot;, &amp;quot;Proxy-Authorization&amp;quot;, &amp;quot;Range&amp;quot;, &amp;quot;Referer&amp;quot;, &amp;quot;TE&amp;quot;, \u000d\u000a&amp;quot;Trailer&amp;quot;, &amp;quot;Transfer-Encoding&amp;quot;, \u000d\u000a&amp;quot;Upgrade&amp;quot;, &amp;quot;User-Agent&amp;quot;, &amp;quot;Via&amp;quot;, and &amp;quot;Warning&amp;quot;. &lt;br \/&gt;\u000d\u000aThe default value is an empty list.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Skip Equivalent Requests (Boolean)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter controls whether the SmartAttack will skip fault injection for requests that are \u000d\u000aequivalent to ones that have already been injected. Requests are considered equivalent if their query \u000d\u000aelement names are the same, even if the query values differ.&lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;true&amp;rdquo;.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Distinguish Request Cookies (Boolean)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter only takes effect if the skipEquivalentRequests parameter is true. This parameter \u000d\u000acontrols whether the SmartAttack will consider cookie values when determining whether requests \u000d\u000aare equivalent. &lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;false&amp;rdquo;.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Max Requests With Same URL (integer)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter sets the maximum number of requests that will be injected that have the same base \u000d\u000aURL, but different queries.&lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;15&amp;rdquo;.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Ajax Request Formats (file)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter specifies the file to be used for descriptions of different AJAX request formats.&lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;font face=\"Lucida Console\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aAjaxRequestFormat.txt&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&amp;rdquo; (the file).&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Injection Value File (string)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter specifies the name of the file that contains the fault injection strings for this \u000d\u000aSmartAttack. Each SmartAttack that involves fault injection is associated with its own unique file \u000d\u000a(set of inputs), except for Buffer Overflow and Format String, which do not require separate sets of \u000d\u000ainputs.&lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;font face=\"Lucida Console\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000adata_FI_SQLParser.txt&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&amp;rdquo; (the file).&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Detection Value File (string)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter specifies the name of the file that contains the fault detection strings for this \u000d\u000aSmartAttack. This SmartAttack identifies faults by matching observed responses to the strings in \u000d\u000athis file.&lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;font face=\"Lucida Console\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000adata_FD_SQLParser.txt&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&amp;rdquo; (the file).&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:2mm; margin-right:6mm; text-indent:0mm; margin-top:4mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Arial\" color=\"#002e5c\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&lt;b&gt;Report Messages&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis SmartAttack generates the following report output:&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&lt;b&gt;Successes&lt;\/b&gt;: &amp;ldquo;No SQL Error Message vulnerabilities detected.&amp;rdquo;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&lt;b&gt;Vulnerabilities:&lt;\/b&gt;&amp;#160; &amp;ldquo;SQL Error Message vulnerability detected.&amp;rdquo;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&lt;b&gt;Warnings&lt;\/b&gt;: &amp;ldquo;Possible SQL Error Message vulnerability.&amp;rdquo;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a<\/TechnicalDescription>\u000d\u000a          <HowItWorks>&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aSQL Error Message is a vulnerability that helps an attacker formulate more accurate SQL Injection \u000astrings. It may also be used as a &amp;lsquo;locator&amp;rsquo; attack that precedes a real SQL Injection attack. \u000aWhen \u000alooking for a SQL Injection vulnerability, an attacker will first inject some SQL characters such as \u000a&amp;lsquo;,--,# so as to try to generate an error in the application. If the error gets displayed in the \u000aresulting \u000apage, the attacker gains valuable information about the Web application.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:2mm; margin-right:6mm; text-indent:0mm; margin-top:4mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Arial\" color=\"#002e5c\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&lt;b&gt;Exploit&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aAlthough this is mainly a helper attack, thus making an exploit unimportant, an SQL Error message \u000avulnerability enables an attacker to gain valuable information such as the type of database used, \u000atables being queried and structure of the tables. This may be considered as an exploit in this context.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aFor example, consider an error message which starts with:&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:8mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Courier New\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000acom.mysql.jdbc.PreparedStatement@2df1314: select user_id, \u000abirth_date as bdate, first_name, ssn from user&amp;#160;&lt;br \/&gt;\u000a&lt;br \/&gt;\u000a&lt;\/span&gt;\u000a&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:8mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Courier New\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000asql error:java.sql.SQLException: Communication link failure: \u000ajava.net.SocketException, underlying cause: Software caused \u000aconnection abort: recv failed&amp;#160;&lt;br \/&gt;\u000a&lt;br \/&gt;\u000a** BEGIN EXCEPTION **&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aThis message provides an attacker with information such as the table being queried, names of its \u000acolumns, database used as MySQL and most probably JSP technology used for web application \u000adevelopment..&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aAn error message that contains only the exception text, such as:&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:8mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Courier New\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aSQLException : java.sql.SQLException: Invalid column type&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:8mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Courier New\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aat oracle.jdbc.dbaccess.DBError.throwSqlException \u000a(SQLErr.java:134)&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aalso discloses that the database being used is an Oracle database and the Web application is mostly \u000awritten in JSP.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a<\/HowItWorks>\u000d\u000a          <Impact>&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aAn attacker might gain administrative control of your web application or database by using \u000aspecially crafted SQL queries. It is also be possible to gain remote access to restricted information \u000avia queries to your database.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aA SQL Error Message vulnerability helps the attacker in formulating the correct query depending \u000aon information disclosed in the error message. Such an error message may also disclose information \u000aabout the deployment of the database, such as the database server used, server-side technology \u000aused, &lt;i&gt;etc&lt;\/i&gt;.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aMany Web applications use SQL databases to store important information which can be disclosed \u000athrough error messages deliberately obtained by an attacker. For example, an error generated by a \u000aWeb-based form for searching employee details of an organization may lead to disclosure of \u000apersonal information stored along with. Likewise, errors generated by a Web-based inventory \u000amanagement app may divulge important information about products yet to be released.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a<\/Impact>\u000d\u000a          <Remediation>&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aThe following recommendations will help to mitigate the risk of SQL injection attacks:&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;ul style=\"margin-top: 0mm; margin-bottom: 0mm; \"&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000aMonitor your production applications for the latest security vulnerabilities and bugs.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000aKeep up to date on patches and security fixes as they are released by the vendor or \u000amaintainer.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000aLimit the types of characters and strings that can be passed as application parameters by \u000aconfiguring native application filters.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000aAvoid using external SQL interpreters.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000aAudit your applications frequently for points where HTML input can access interpreters.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000aEnsure proper input validation is performed for user supplied data, regardless of the \u000aapplication&amp;rsquo;s relationship to a back-end database.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000aAvoid use of dynamic SQL or PL\/SQL and use bound variables whenever possible.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000aEnforce strict limitations on the rights to database access.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000aRemove any sample applications or demo scripts that allow remote database queries.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;\/ul&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aUse structured exception handling to catch errors and prevent their exposure to the client.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aIf errors occur while the user is connecting to the database, be sure that you provide only limited \u000ainformation to the user. Detailed error SQL error messages help a malicious user reverse engineer \u000ayour database structure and determine the presence or absence of database tables. Such errors also \u000ahelp them to refine their attacks against your database.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aIn order to protect against exposing sensitive information you need to implement specific security \u000ameasures to catch SQL based errors and redirect users to a generic error page.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:2mm; margin-right:6mm; text-indent:0mm; margin-top:4mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Arial\" color=\"#002e5c\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&lt;b&gt;PHP&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aFor PHP, you can control whether or not detailed error messages are presented to the client by \u000asetting the following directives. The configuration below will log errors to your server&amp;rsquo;s error \u000alog, \u000abut not display the errors to the client:&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000alog_errors = On&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000adisplay_errors = Off&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aSee also the PHP Manual&amp;rsquo;s section Error Handling and Logging Functions: \u000a&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;font face=\"Times New Roman\" color=\"#0000ff\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&lt;u&gt;http:\/\/us2.php.net\/errorfunc&lt;\/u&gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:2mm; margin-right:6mm; text-indent:0mm; margin-top:4mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Arial\" color=\"#002e5c\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&lt;b&gt;ASP.NET&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aImplementing a global exception handling mechanism can enhance the security and usability of a \u000aweb application by redirecting users to a custom error page whenever handled and unhandled \u000aexceptions occur. With ASP.NET you can handle errors either on the Application level, via \u000aglobal.asax, or on the page level via specific error handling code. Also employ mechanisms to \u000aredirect users to a custom error page whenever an exception occurs.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aTo set up a custom error page it is necessary to edit web.config and add a&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;font face=\"Courier New\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;customerrors&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;tag if \u000ait does not already exist.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;lt;configuration&amp;gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160; &amp;lt;customerrors mode=&amp;quot;On&amp;quot; defaultredirect=&amp;quot;error.aspx&amp;quot; \/&amp;gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;lt;\/configuration&amp;gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:4mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aThe mode attribute has three settings: &amp;ldquo;On,&amp;rdquo; &amp;ldquo;Off,&amp;rdquo; and &amp;ldquo;RemoteOnly.&amp;rdquo; \u000aWhen set to &amp;ldquo;On&amp;rdquo; the \u000acustom error page will be used anytime an exception occurs. When the attribute is set to \u000aRemoteOnly, it will only redirect to the custom error page in the event the client does not originate \u000afrom the local machine. Local users will continue to see detailed error messages.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:2mm; margin-right:6mm; text-indent:0mm; margin-top:4mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Arial\" color=\"#002e5c\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&lt;b&gt;Structured Exception Handling&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aUse code-level structured exception handling to trap exceptions and prevent diagnostic or detailed \u000aerror messages from being displayed. Implement a global exception handling mechanism in \u000aglobal.asax to catch any exceptions that are not handled in your code.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:2mm; margin-right:6mm; text-indent:0mm; margin-top:4mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Arial\" color=\"#002e5c\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&lt;b&gt;Java&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:4mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aThere are two kinds of exceptions in Java, namely checked and unchecked exceptions.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:4mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aIf the client code cannot do anything, then make it an unchecked exception. If the client code will \u000atake some useful recovery action based on information in the exception, make it a checked \u000aexception.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Arial\" color=\"#333399\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&lt;b&gt;&lt;i&gt;Vulnerable code:&lt;\/i&gt;&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:4mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aAn example of vulnerable code is below.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000apublic void dataAccess(){&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160; try{&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; ..some code that throws SQLException&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160; }catch(SQLException ex){&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; throw new SQLException(ex);&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160; }&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:3mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a}&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:4mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aIn this example, the details of the exception are propagated, which might cause a leak of private \u000ainformation.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Arial\" color=\"#333399\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&lt;b&gt;&lt;i&gt;Secure code:&lt;\/i&gt;&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000a&lt;span style=\"font-size:11pt\"&gt;\u000a&lt;b&gt;&lt;i&gt;1. Encapsulation&lt;\/i&gt;&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:4mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aNever let implementation-specific exceptions propagate to the higher layers. For example, do not \u000apropagate SQLException from the data access code to the business objects layer.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000apublic void dataAccess(){&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160; try{&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; ..some code that throws SQLException&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160; }catch(SQLException ex){&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; throw new RuntimeException(ex);&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160; }&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a}&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&lt;br \/&gt;\u000a&lt;\/span&gt;\u000a&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000apublic void dataAccessCode(){&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160; try{&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; ..some code that throws LDAPException&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160; }catch(javax.naming.directory.Exception ex){&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; throw new RuntimeException(ex);&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160; }&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:3mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a}&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:4mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aThis example converts SQLException or LDAPException to RuntimeException. If SQLException \u000aor LDAPException occurs, the catch clause throws a new RuntimeException. The execution thread \u000ais suspended and the exception gets reported. However, this does not corrupt the business object \u000alayer with unnecessary exception handling, since specific exceptions related to LDAP or SQL \u000ashould be handled in the tier of code that deals with it.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:4mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aIn addition to the above scheme, production systems should NEVER use the default error page. A \u000acustom error page should be created using the &amp;lt;error-page&amp;gt; directive in web.xml. For example, \u000aplace the following within your &amp;lt;web-app&amp;gt; to catch all JSP compilation\/runtime exceptions and \u000aredirect them to your custom error page:&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:4mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;lt;error-page&amp;gt;&amp;lt;exception &amp;gt;java.lang.Exception&amp;lt;\/exception&amp;gt; \u000a&amp;lt;location&amp;gt;\/safeErrorPage.html&amp;lt;\/location&amp;gt;&amp;lt;\/error-page&amp;gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:4mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aMore information can be found at: \u000a&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;font face=\"Times New Roman\" color=\"#0000ff\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&lt;u&gt;http:\/\/www.oracle.com\/technology\/sample_code\/tech\/java\/codesnippet\/servlets\/handlingservletexceptions\/handlingservletexceptions.html#how1&lt;\/u&gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:4mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\" color=\"#0000ff\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&lt;u&gt;http:\/\/www.objectsource.com\/j2eechapters\/Ch18-Exception_Handling.htm&lt;\/u&gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000a&lt;span style=\"font-size:11pt\"&gt;\u000a&lt;b&gt;&lt;i&gt;2. Clean up&lt;\/i&gt;&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:4mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aResources like database connections or network connections should be cleaned up. Even if they are \u000aonly unchecked exceptions, clean up the resources using try - finally blocks.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000apublic void dataAccess(){&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160; Connection conn = null;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160; try{&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; conn = getConnection();&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; ..some code that throws SQLException&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160; }catch(SQLException ex){&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; logger.error(&amp;quot;error in sql&amp;quot;);&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160; } finally{&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; DBUtil.closeConnection(conn);&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160; }&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a}&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&lt;br \/&gt;\u000a&lt;\/span&gt;\u000a&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aclass DBUtil{&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160; public static void closeConnection&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; (Connection conn){&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; try{&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; conn.close();&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; } catch(SQLException ex){&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; logger.error(&amp;quot;Cannot close connection&amp;quot;);&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; throw new RuntimeException(ex);&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; }&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160; }&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:3mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a}&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000a&lt;span style=\"font-size:11pt\"&gt;\u000a&lt;b&gt;&lt;i&gt;3. Identify sources of exception&lt;\/i&gt;&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:4mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aIdentify all possible uncaught runtime exceptions early in the development lifecycle, then examine \u000aand modify the code to ensure that it does not provide any opportunities for hackers.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:2mm; margin-right:6mm; text-indent:0mm; margin-top:4mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Arial\" color=\"#002e5c\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&lt;b&gt;Disable Trace Output&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aAlso in web.config, set pageOutput=&amp;quot;false&amp;quot; on the &amp;lt;trace&amp;gt; element to prevent trace output \u000afrom \u000abeing displayed. You should make the changes to a machine level web.config&amp;#160; file to ensure that \u000athe \u000aconfiguration is used for all your applications on the server. Place the &amp;lt;trace&amp;gt; element inside \u000aa \u000a&amp;lt;location&amp;gt; element and set allowOverride to false:&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;lt;location path=&amp;quot;&amp;quot; allowOverride=&amp;quot;false&amp;quot;&amp;gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160; &amp;lt;system.web&amp;gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160; &amp;lt;trace pageOutput=&amp;quot;false&amp;quot; ... \/&amp;gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160; &amp;lt;\/system.web&amp;gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;lt;\/location&amp;gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:2mm; margin-right:6mm; text-indent:0mm; margin-top:4mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Arial\" color=\"#002e5c\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&lt;b&gt;Coldfusion&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:3mm; margin-right:0mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000a&lt;span style=\"font-size:11pt\"&gt;\u000a&lt;b&gt;&lt;i&gt;Generic&lt;\/i&gt;&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:3mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aColdFusion provides a number of ways to filter or validate user input. The security measures span \u000aboth client-side and server-side filtering. Where possible, implement your security controls on the \u000aserver-side to avoid tampering of your controls via a Man-In-The-Middle (MITM) proxy. An \u000aattacker can easily bypass client-side controls by using such a program to modify the underlying \u000aHTTP Request as it passes between the proxy and the web application. Additionally, we \u000arecommend that sites using ColdFusion should configure their application using the recommended \u000asecurity features of the Adobe ColdFusion 8 Developers Guide, or the guide relevant to your \u000aversion of ColdFusion.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:3mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aColdFusion Data validation allows you to control the type of data that is allowed as well as to \u000aensure that user-supplied data corresponds to the correct form.&amp;#160; Attentive data validation procedures \u000acan have the following benefits:&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;ul style=\"margin-top: 0mm; margin-bottom: 0mm; \"&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000aEnhance the security of your application by ensuring that malicious users cannot input \u000adata that exploits a security vulnerability, such as SQL Injection, XSS, or buffer \u000aoverflows.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000aEnhance application resilience by rejecting invalid data on the server-side prior to \u000aprocessing the input.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000aEnhance application usability by providing the user with feedback that allows them to \u000acorrect their mistakes, while not generating verbose error messages.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;\/ul&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aThe list below gives you an overview of the available data validation tags, as well as their \u000avalidation type (server vs. client side) methods. For a more detailed explanation consult your \u000aColdFusion Developers resources on the CFML language and its security features:&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;ul style=\"margin-top: 0mm; margin-bottom: 0mm; \"&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Italic; font-decoration:Normal\"&gt;\u000a&lt;i&gt;Mask&lt;\/i&gt;, &lt;b&gt;client&lt;\/b&gt;: Applies to cfinput tags on the client-side. The use of Mask creates a \u000aJavascript or ActionScript control that verifies that input corresponds to a specified \u000apattern. For example: nnn-nnn-nnnn where &amp;ldquo;n&amp;rdquo; is an integer. Note, this is a client-side \u000acontrol that can be easily bypassed.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Italic; font-decoration:Normal\"&gt;\u000a&lt;i&gt;onBlur, &lt;\/i&gt;&lt;b&gt;client&lt;\/b&gt;: Applies to cfinput and cftextarea tags. &lt;i&gt;onBlur &lt;\/i&gt;creates a JavaScript \u000athat \u000aruns in the browser and checks that user supplied data matches a corresponding pattern. \u000aCan be bypassed by a MITM proxy.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Italic; font-decoration:Normal\"&gt;\u000a&lt;i&gt;onSubmit&lt;\/i&gt;&lt;b&gt;&lt;i&gt;, &lt;\/i&gt;&lt;\/b&gt;&lt;b&gt;client&lt;\/b&gt;: Applies to the Web browser when the user clicks submit. \u000aChecks that \u000athe data passed from the browser corresponds to a specified pattern. Can be bypassed by \u000aMITM proxy.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Italic; font-decoration:Normal\"&gt;\u000a&lt;i&gt;onServer,&lt;\/i&gt;&lt;b&gt;&lt;i&gt; &lt;\/i&gt;&lt;\/b&gt;&lt;b&gt;server&lt;\/b&gt;: Applies to server-side data after the form is submitted. \u000aColdFusion \u000achecks the form data of cfinput and cftextarea tags and generates an error page if the data \u000ais not valid. Use this tag in conjunction with the cferror tag to specify the validation error \u000apage. Note: a failure to specify an error page will result in an information leak in your \u000aerror handling routine, as ColdFusion errors are verbose.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Italic; font-decoration:Normal\"&gt;\u000a&lt;i&gt;IsValid&lt;\/i&gt;, &lt;b&gt;server: &lt;\/b&gt;tests an input variable to determine if the content of the variable meets \u000ainternal validation rules. The&lt;b&gt; &lt;\/b&gt;&lt;i&gt;IsValid&lt;\/i&gt; function returns true or false for the variable.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Italic; font-decoration:Normal\"&gt;\u000a&lt;i&gt;Cfparam, &lt;\/i&gt;&lt;b&gt;server: &lt;\/b&gt;tests an input variable to determine if the variable meets validation \u000acriteria. If the variable does not meet the criteria an expression exception is generated.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Italic; font-decoration:Normal\"&gt;\u000a&lt;i&gt;Cfqueryparam, &lt;\/i&gt;&lt;b&gt;server: &lt;\/b&gt;evaluates the content of a HTTP query string to validate whether \u000athe string meets validation criteria.&amp;#160; This tag is useful for scrubbing HTTP query strings \u000aprior to further processing.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;\/ul&gt;\u000a&lt;p style=\"margin-left:3mm; margin-right:0mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000a&lt;span style=\"font-size:11pt\"&gt;\u000a&lt;b&gt;&lt;i&gt;SQL Security&lt;\/i&gt;&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:3mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aWhen data from a user-supplied parameter is passed within a SQL query, if proper security \u000amechanisms are not in place a malicious user can modify the underlying query and conduct SQL \u000aInjection attacks.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Arial\" color=\"#333399\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&lt;b&gt;&lt;i&gt;Vulnerable Code&lt;\/i&gt;&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:3mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aConsider the code below, which is vulnerable to SQL Injection:&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:0mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;lt;cfquery name=&amp;rdquo;GetMembers&amp;rdquo; datasource=&amp;rdquo;example&amp;rdquo;&amp;gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:0mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160; SELECT FirstName, LastName,&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:0mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160; From Members&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:0mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160; WHERE EmpID=&amp;rsquo;#Form.EmpID#&amp;rsquo;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:0mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;lt;\/cfquery&amp;gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:0mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aThe sample code above could be called by a malicious URL in the following way:&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:0mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aServer\/script.cfm?EmpID=0%20Malicious%20SQL%20Query&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:0mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aWhich would result in following SQL Expression, as if the form consisted of:&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:0mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;lt;cfquery name=&amp;rdquo;GetMembers&amp;rdquo; datasource=&amp;rdquo;example&amp;rdquo;&amp;gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:0mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160; SELECT FirstName, LastName,&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:0mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160; From Members&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:0mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160; WHERE EmpID= 0 MALICIOUS SQL QUERY&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:0mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;lt;\/cfquery&amp;gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:0mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aAn attacker could abuse this vulnerability to delete all data from tables or read or modify the underlying \u000adatabase, or authenticate without a username or password.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Arial\" color=\"#333399\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&lt;b&gt;&lt;i&gt;Secure Code&lt;\/i&gt;&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:0mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aThe &lt;b&gt;cfqueryparam tag&lt;\/b&gt; can be used to evaluate the string parameters prior to processing by the \u000adatabase. You can specify the type of data for the corresponding database columns used in the select \u000astatement and reject input of invalid data types. Cfqueryparam, when used in conjunction with \u000a&lt;b&gt;cfsqltype,&lt;\/b&gt; can also use a wide range of input validation functions, as well as constrain the \u000alength of \u000ainput on the server-side, preventing SQL Injection.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:0mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aFor example:&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:0mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;lt;cfquery name=&amp;rdquo;GetFirstName&amp;rdquo; datasource=&amp;rdquo;example&amp;rdquo;&amp;gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:0mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160; SELECT * FROM Employees&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:0mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160; WHERE EmpID = &amp;lt;cfqueryparam value = &amp;ldquo;#EmpID#&amp;rdquo;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:0mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160; Cfsqltype = &amp;ldquo;cf_sql_integer&amp;rdquo;&amp;gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:0mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;lt;\/cfquery&amp;gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:0mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aThis code thus prevents SQL Injection of the EmpID parameter value by enforcing an integer data type. \u000aNote that you must enforce proper error handling or this security measure could introduce an \u000ainformation leak via verbose SQL Error Messages.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aWhen manipulating strings, you can use other security measures to enforce a string data type, limit \u000amaximum length of the string, and escape the string values within single quotations to ensure it is \u000aexamined as a single value by the database. For additional information on the use of cfqueryparam \u000aand cfsqltype, consult your ColdFusion documentation. In addition to the use of these measures, \u000ayou should also enforce input validation to reject queries that contain special characters. This \u000aprevents an attacker from manipulating SQL expressions via special characters used by delimeters \u000ain database queries.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a<\/Remediation>\u000d\u000a        <\/SmartAttackInfo>\u000d\u000a        <ReportItems>\u000d\u000a          <ReportItem Id=\"3238694\">\u000d\u000a            <ReportItemType>Notify<\/ReportItemType>\u000d\u000a            <ReportItemCreateDate>10\/21\/2017 5:13:53 AM<\/ReportItemCreateDate>\u000d\u000a            <Severity \/>\u000d\u000a            <HarmScore>120<\/HarmScore>\u000d\u000a            <CVSSBaseScore \/>\u000d\u000a            <ComputedHarmScore>0<\/ComputedHarmScore>\u000d\u000a            <Count>1<\/Count>\u000d\u000a            <Message>Test incomplete. Traversal ended before loading any pages.\u000aCheck the traversal starting URL and whether the site is accessible.\u000a\u000aTraversal status: normal\u000aStopped at step 2 of 2\u000a<\/Message>\u000d\u000a            <GlobalizedMessage>Test incomplete. Traversal ended before loading any pages.\u000aCheck the traversal starting URL and whether the site is accessible.\u000a\u000aTraversal status: normal\u000aStopped at step 2 of 2\u000a<\/GlobalizedMessage>\u000d\u000a            <Url \/>\u000d\u000a            <TraversalName>[Default Spider]<\/TraversalName>\u000d\u000a            <Filtered>0<\/Filtered>\u000d\u000a            <HttpRequest \/>\u000d\u000a            <HttpResponse \/>\u000d\u000a            <StructuredData \/>\u000d\u000a          <\/ReportItem>\u000d\u000a        <\/ReportItems>\u000d\u000a        <Categories>\u000d\u000a          <Category>\u000d\u000a            <Name>OWASP-2013<\/Name>\u000d\u000a          <\/Category>\u000d\u000a        <\/Categories>\u000d\u000a      <\/SmartAttacksData>\u000d\u000a      <SmartAttacksData>\u000d\u000a        <SmartAttackInfo PolicyId=\"481edee8-9a3f-499e-bc7e-8e3e17c72969\" PolicyVersion=\"1.2\" CenzicId=\"CPL0002139\" Severity=\"High\" VulnerabilityIds=\"CWE-601\">\u000d\u000a          <SmartAttackName>Open Redirect - [OWASP 2013 A 10]<\/SmartAttackName>\u000d\u000a          <Description>&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis SmartAttack reports each page on which it finds Open Redirect vulnerabilities.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a<\/Description>\u000d\u000a          <TechnicalDescription>&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aTechnique used by this SmartAttack to detect Open Redirect vulnerabilities is to inject a URL into \u000d\u000aapplication and determine from the response if the request gets redirected to the injected URL. It \u000d\u000amight be possible that the injected URL is reflected in a META refresh tag that in turn takes the \u000d\u000auser to the injected URL. If the injection results in a 3xx response which is redirection to injected \u000d\u000aURL, the smart attack reports it as Open Redirect vulnerability.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis SmartAttack can fault inject fields in HTTP queries (which typically correspond to fields in \u000d\u000aforms), particular HTTP headers, and cookies.&amp;#160; By default, it injects fields in HTTP queries.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis SmartAttack walks the traversal and identifies HTTP requests which are candidates for fault \u000d\u000ainjection. The SmartAttack identifies a failure when it detects the evidence of redirection to the \u000d\u000ainjected URL, or the occurrence of injected URL in a META refresh tag.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:2mm; margin-right:6mm; text-indent:0mm; margin-top:4mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Arial\" color=\"#002e5c\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&lt;b&gt;To Use&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:19mm; margin-right:6mm; text-indent:-6mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a1.&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;Create a traversal that represents the target application, or a subset \u000d\u000aof specific pages in \u000d\u000athe application.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:19mm; margin-right:6mm; text-indent:-6mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a2.&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;Create a new job or open an existing job.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:19mm; margin-right:6mm; text-indent:-6mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a3.&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;Add the traversal created above to the job.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:19mm; margin-right:6mm; text-indent:-6mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a4.&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;Add this SmartAttack to the job.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:19mm; margin-right:6mm; text-indent:-6mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a5.&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;Set the parameters or accept the defaults in the job. (See below.)&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:19mm; margin-right:6mm; text-indent:-6mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a6.&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;Run the job.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:2mm; margin-right:6mm; text-indent:0mm; margin-top:4mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Arial\" color=\"#002e5c\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&lt;b&gt;Parameters&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Arial\" color=\"#333399\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&lt;b&gt;&lt;i&gt;Optional&lt;\/i&gt;&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:0mm; margin-right:6mm; text-indent:9mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Attacks to Delay&amp;#160;&amp;#160; (list of regular expressions)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter is a set of regular expressions that will be used to identify requests for which attacks \u000d\u000ashould be delayed until the end of the traversal (such as login requests). Because slashes are \u000d\u000ametacharacters in regular expressions, if you wish to include them in your URL pattern, you must \u000d\u000aescape them with a backslash.&lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;login&amp;rdquo;.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Inject Form Fields&amp;#160;&amp;#160; (Boolean)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter controls whether HTTP query fields will be injected. By default, all fields will be \u000d\u000ainjected. &lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;true&amp;rdquo;.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Inject Cookies (Boolean)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter controls whether individual cookies in the &amp;ldquo;Cookie&amp;rdquo; header (if present) will \u000d\u000abe \u000d\u000ainjected. &lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;false&amp;rdquo;.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Inject A Field At A Time (Boolean)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter specifies that fault injection should happen by injecting one item at a time instead \u000d\u000aof \u000d\u000aall at once. The injectable items are elements of GET or POST queries, individual headers, or \u000d\u000acookies. Field-at-a-time injection can take considerably longer but might uncover vulnerabilities \u000d\u000athat would not be found with all-at-once injection. (The reason for this is that some forms employ \u000d\u000ainput validation only on some but not all fields. With all-at-once injection, if &lt;i&gt;any&lt;\/i&gt; of the fields \u000d\u000areject \u000d\u000aan input, vulnerabilities in unvalidated fields will remain undetected.)&lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;true&amp;rdquo;.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Stop On First Fault (Boolean)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter controls whether the SmartAttack will stop after finding the first injection value that \u000d\u000areveals a vulnerability in a form, or continue to find all injection values that produce faults.&lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;true&amp;rdquo;.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;URLs To Skip (list of regular expressions)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter specifies a list of regular expression patterns which will be matched against the \u000d\u000aURL of each HTTP request that is a candidate for fault injection. If the URL matches one of the \u000d\u000apatterns in the skip list, the request will not be fault injected.&lt;br \/&gt;\u000d\u000aThe default value is an empty list.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Fields To Skip&amp;#160;&amp;#160; (list of regular expressions)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter specifies a list of regular expression patterns which that will be used to identify \u000d\u000aform field and cookie names that should be excluded from fault injection.&lt;br \/&gt;\u000d\u000aThe default value is an empty list.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;URLs To Inject (list of regular expressions)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter specifies a list of regular expression patterns which will be matched against the \u000d\u000aURL of each HTTP request that is a candidate for fault injection. If the URL matches one of the \u000d\u000apatterns in the inject list, only then will the request be fault injected. An empty list means all \u000d\u000arequests will be injected, subject to other parameter settings.&lt;br \/&gt;\u000d\u000aThe default value is an empty list.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Fields To Inject (list of regular expressions)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter specifies a list of regular expression patterns which will be used to identify form \u000d\u000afield and cookie names that should be fault injected. Any field that is not on this list will not be \u000d\u000ainjected. An empty list means all fields will be injected, subject to other parameter settings.&lt;br \/&gt;\u000d\u000aThe default value is an empty list.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Injection String Groups (enumeration)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter controls which subsets of fault injection strings are used in a test. The strings are \u000d\u000adivided into &amp;ldquo;Set #1,&amp;rdquo; &amp;ldquo;Set #2,&amp;rdquo; &amp;ldquo;Set #3,&amp;rdquo; and &amp;ldquo;Set #4,&amp;rdquo; \u000d\u000awhere the first group consists of just a few \u000d\u000afault injection values (those that are typically the most effective) and the following groups add more \u000d\u000astrings. The fourth group is very large and should be run only when comprehensive testing is the \u000d\u000apriority and the amount of time consumed by the job run is not. The groups are mutually exclusive \u000d\u000aand not supersets of one another, and you can choose to run some and not others. Specifying no \u000d\u000agroups results in all strings being used.&lt;br \/&gt;\u000d\u000aThe default is to use the following fault injection string groups: [&amp;ldquo;Set #1&amp;rdquo;, &amp;ldquo;Set \u000d\u000a#2&amp;rdquo;, &amp;ldquo;Set #3&amp;rdquo;].&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Arial\" color=\"#333399\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&lt;b&gt;&lt;i&gt;Advanced&lt;\/i&gt;&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Max Traversal Restarts (integer)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter controls whether and how many times a fault injector will attempt to restart a \u000d\u000atraversal if fault injection interferes with replaying the traversal. The parameter can be set to &amp;ldquo;0&amp;rdquo; \u000d\u000ato \u000d\u000aprevent the traversal from being restarted. &lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;4&amp;rdquo;.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Injection Value File (string)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter specifies the name of the file that contains the fault injection strings for this \u000d\u000aSmartAttack. Each SmartAttack that involves fault injection is associated with its own unique file \u000d\u000a(set of inputs), except for Buffer Overflow and Format String, which do not require separate sets of \u000d\u000ainputs.&lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;font face=\"Lucida Console\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000adata_FI_URLInjection.txt&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&amp;rdquo; (the file).&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Detection Value File (string)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter specifies the name of the file that contains the fault detection strings for this \u000d\u000aSmartAttack. This SmartAttack identifies faults by matching observed responses to the strings in \u000d\u000athis file.&lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;font face=\"Lucida Console\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000adata_FD_ApplicationException.txt&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&amp;rdquo; (the file).&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Make Requests Using Sockets (Boolean)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter controls whether browsing requests can be performed using HTTP&amp;#160; sockets or&amp;#160;&amp;#160; \u000d\u000anot.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThe default value is &amp;ldquo;true&amp;rdquo;.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Start SmartAttack After Traversal (Boolean)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis is an advanced parameter that controls whether the SmartAttack processing (concurrent \u000d\u000abrowsing, in this case) begins during the traversal or after the traversal has completed. The default \u000d\u000ais false, meaning that the processing will start &lt;i&gt;during&lt;\/i&gt; the traversal. In cases where traversals \u000d\u000aare \u000d\u000aunable to complete due to the effects of SmartAttack processes during concurrent browsing, setting \u000d\u000athis parameter to true will postpone concurrent browsing until after the traversal has completed, \u000d\u000awhich allows all of the injectable requests in the traversal to be collected and injected after the \u000d\u000atraversal is over. While this allows all of the concurrent browsing to occur, it might not occur in \u000d\u000athe \u000d\u000asame context or state that it would have during the traversal. Default = &amp;ldquo;false&amp;rdquo;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Skip First N Injectable Requests (integer)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis is an advanced parameter that specifies the number of the injectable request on which fault \u000d\u000ainjection will begin, allowing previous requests to be exempted from fault injection. In some cases, \u000d\u000atraversals are unable to complete due to fault injection. In such cases, this parameter can be used \u000d\u000ato \u000d\u000apick up fault injection after the point where the traversal was compromised in a previous job run. \u000d\u000aBecause report items for fault injector SmartAttacks identify the number of each request being \u000d\u000ainjected, you can identify the field where you wish to start and enter that number in this parameter.&lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;0&amp;rdquo;.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Headers To Inject (list of strings)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter indicates which HTTP headers (if any) will be injected. The parameter should \u000d\u000aspecify a list of strings with HTTP header names. By default, no HTTP headers will be fault \u000d\u000ainjected. Valid headers are &amp;quot;Accept&amp;quot;, &amp;quot;Accept-Charset&amp;quot;, &amp;quot;Accept-Encoding&amp;quot;, \u000d\u000a&amp;quot;Accept-Language&amp;quot;, \u000d\u000a&amp;quot;Allow&amp;quot;, &amp;quot;Authorization&amp;quot;, &amp;quot;Cache-Control&amp;quot;, &amp;quot;Connection&amp;quot;, &amp;quot;Content-Encoding&amp;quot;, \u000d\u000a&amp;quot;Content-\u000d\u000aLanguage&amp;quot;, &amp;quot;Content-Length&amp;quot;, &amp;quot;Content-Location&amp;quot;, &amp;quot;Content-MD5&amp;quot;, &amp;quot;Content-Range&amp;quot;, \u000d\u000a&amp;quot;Content-\u000d\u000aType&amp;quot;, &amp;quot;Cookie&amp;quot;, &amp;quot;Date&amp;quot;, &amp;quot;Expect&amp;quot;, &amp;quot;Expires&amp;quot;, &amp;quot;From&amp;quot;, \u000d\u000a&amp;quot;Host&amp;quot;, &amp;quot;If-Match&amp;quot; &amp;quot;If-Modified-Since&amp;quot;, &amp;quot;If-\u000d\u000aNone-Match&amp;quot;, &amp;quot;If-Range&amp;quot;, &amp;quot;If-Unmodified-Since&amp;quot;, &amp;quot;Last-Modified&amp;quot;, \u000d\u000a&amp;quot;Location&amp;quot;, &amp;quot;Max-Forwards&amp;quot;, \u000d\u000a&amp;quot;Pragma&amp;quot;, &amp;quot;Proxy-Authorization&amp;quot;, &amp;quot;Range&amp;quot;, &amp;quot;Referer&amp;quot;, &amp;quot;TE&amp;quot;, \u000d\u000a&amp;quot;Trailer&amp;quot;, &amp;quot;Transfer-Encoding&amp;quot;, \u000d\u000a&amp;quot;Upgrade&amp;quot;, &amp;quot;User-Agent&amp;quot;, &amp;quot;Via&amp;quot;, and &amp;quot;Warning&amp;quot;. &lt;br \/&gt;\u000d\u000aThe default value is an empty list.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Skip Equivalent Requests (Boolean)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter controls whether the SmartAttack will skip fault injection for requests that are \u000d\u000aequivalent to ones that have already been injected. Requests are considered equivalent if their query \u000d\u000aelement names are the same, even if the query values differ.&lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;true&amp;rdquo;.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Distinguish Request Cookies (Boolean)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter only takes effect if the skipEquivalentRequests parameter is true. This parameter \u000d\u000acontrols whether the SmartAttack will consider cookie values when determining whether requests \u000d\u000aare equivalent. &lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;false&amp;rdquo;.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Max Requests With Same URL (integer)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter sets the maximum number of requests that will be injected that have the same base \u000d\u000aURL, but different queries.&lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;15&amp;rdquo;.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;AJAX Request Formats (string)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aIt specifies the file to be used for the description of AJAX request formats.&lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;font face=\"Lucida Console\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aAjaxRequestFormat.txt&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&amp;rdquo; (the file).&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&lt;br \/&gt;\u000d\u000a&lt;\/span&gt;\u000d\u000a&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:2mm; margin-right:6mm; text-indent:0mm; margin-top:4mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Arial\" color=\"#002e5c\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&lt;b&gt;Report Messages&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis SmartAttack generates the following report output:&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&lt;b&gt;Pass&lt;\/b&gt;:&lt;b&gt; &lt;\/b&gt;&amp;quot;No Open Redirect vulnerabilities were found.&amp;quot;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&lt;b&gt;Vulnerabilities&lt;\/b&gt;:&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a1. &amp;quot;Open Redirect vulnerability found. In redirection to &amp;lt;injected URL&amp;gt;&amp;rdquo;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a2. &amp;quot;Open Redirect vulnerability found. &amp;lt;SHORT TAG DESCRIPTION&amp;gt;&amp;rdquo;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&lt;b&gt;Information:&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&amp;#160;&amp;quot;Open Redirect vulnerability found. Detected as a possible URL parameter&amp;quot;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a<\/TechnicalDescription>\u000d\u000a          <HowItWorks>&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aOpen Redirect occurs if a URL specified as input is used for redirecting a client. If the application \u000d\u000adoes not properly validate this parameter, the attacker can inject a URL of his own choice and the \u000d\u000aapplication will blindly redirect the user to the attacker site.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aAn attacker can send a link of a page vulnerable to Open Redirect to a victim so that after clicking \u000d\u000athe link the victim will be redirected to a URL of attacker&amp;rsquo;s choice. The page after redirection \u000d\u000acan \u000d\u000abe used by the attacker for phishing attacks.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aOpen Redirect attacks can be prevented by filtering out the URL&amp;rsquo;s that are not in the white-list \u000d\u000abefore causing a redirection.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a<\/HowItWorks>\u000d\u000a          <Impact>&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThe attacker can inject arbitrary URL in the field that causes redirection, and can effectively cause \u000d\u000aphishing attacks.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a<\/Impact>\u000d\u000a          <Remediation>&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThe following general recommendations can help to mitigate the risk associated with Frame \u000d\u000aInjection vulnerabilities.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:19mm; margin-right:6mm; text-indent:-6mm; margin-top:0mm; margin-bottom:3mm; \"&gt;\u000d\u000a&lt;font face=\"Symbol\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&amp;#183;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aEnsure that the user-input that results in a frame load gets filtered and user is not able to \u000d\u000ainsert his own URL in it.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:19mm; margin-right:6mm; text-indent:-6mm; margin-top:0mm; margin-bottom:3mm; \"&gt;\u000d\u000a&lt;font face=\"Symbol\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&amp;#183;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aAlways keep list of URLs which can be accepted from input field to which application \u000d\u000acan be redirected.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:19mm; margin-right:6mm; text-indent:-6mm; margin-top:0mm; margin-bottom:3mm; \"&gt;\u000d\u000a&lt;font face=\"Symbol\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&amp;#183;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aStrictly enforce white and black list URLs rule throughout the application.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:2mm; margin-right:6mm; text-indent:0mm; margin-top:4mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Arial\" color=\"#002e5c\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&lt;b&gt;Coldfusion&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:0mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;b&gt;&lt;i&gt;Generic&lt;\/i&gt;&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:3mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aColdFusion provides a number of ways to filter or validate user input. The security measures span \u000d\u000aboth client-side and server-side filtering. Where possible, implement your security controls on the \u000d\u000aserver-side to avoid tampering of your controls via a Man-In-The-Middle (MITM) proxy. An \u000d\u000aattacker can easily bypass client-side controls by using such a program to modify the underlying \u000d\u000aHTTP Request as it passes between the proxy and the web application. Additionally, we \u000d\u000arecommend that sites using ColdFusion should configure their application using the recommended \u000d\u000asecurity features of the Adobe ColdFusion 8 Developers Guide, or the guide relevant to your \u000d\u000aversion of ColdFusion.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:3mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aColdFusion Data validation allows you to control the type of data that is allowed as well as to \u000d\u000aensure that user-supplied data corresponds to the correct form.&amp;#160; Attentive data validation procedures \u000d\u000acan have the following benefits:&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:19mm; margin-right:6mm; text-indent:-6mm; margin-top:0mm; margin-bottom:3mm; \"&gt;\u000d\u000a&lt;font face=\"Symbol\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&amp;#183;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aEnhance the security of your application by ensuring that malicious users cannot input \u000d\u000adata that exploits a security vulnerability, such as SQL Injection, XSS, or buffer \u000d\u000aoverflows.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:19mm; margin-right:6mm; text-indent:-6mm; margin-top:0mm; margin-bottom:3mm; \"&gt;\u000d\u000a&lt;font face=\"Symbol\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&amp;#183;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aEnhance application resilience by rejecting invalid data on the server-side prior to \u000d\u000aprocessing the input.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:19mm; margin-right:6mm; text-indent:-6mm; margin-top:0mm; margin-bottom:3mm; \"&gt;\u000d\u000a&lt;font face=\"Symbol\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&amp;#183;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aEnhance application usability by providing the user with feedback that allows them to \u000d\u000acorrect their mistakes, while not generating verbose error messages.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThe list below gives you an overview of the available data validation tags, as well as their \u000d\u000avalidation type (server vs. client side) methods. For a more detailed explanation consult your \u000d\u000aColdFusion Developers resources on the CFML language and its security features:&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:19mm; margin-right:6mm; text-indent:-6mm; margin-top:0mm; margin-bottom:3mm; \"&gt;\u000d\u000a&lt;font face=\"Symbol\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&amp;#183;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&lt;i&gt;Mask&lt;\/i&gt;, &lt;b&gt;client&lt;\/b&gt;: Applies to cfinput tags on the client-side. The use of Mask creates a \u000d\u000aJavascript or ActionScript control that verifies that input corresponds to a specified \u000d\u000apattern. For example: nnn-nnn-nnnn where &amp;ldquo;n&amp;rdquo; is an integer. Note, this is a client-side \u000d\u000acontrol that can be easily bypassed.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:19mm; margin-right:6mm; text-indent:-6mm; margin-top:0mm; margin-bottom:3mm; \"&gt;\u000d\u000a&lt;font face=\"Symbol\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&amp;#183;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&lt;i&gt;onBlur, &lt;\/i&gt;&lt;b&gt;client&lt;\/b&gt;: Applies to cfinput and cftextarea tags. &lt;i&gt;onBlur &lt;\/i&gt;creates a JavaScript \u000d\u000athat \u000d\u000aruns in the browser and checks that user supplied data matches a corresponding pattern. \u000d\u000aCan be bypassed by a MITM proxy.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:19mm; margin-right:6mm; text-indent:-6mm; margin-top:0mm; margin-bottom:3mm; \"&gt;\u000d\u000a&lt;font face=\"Symbol\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&amp;#183;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&lt;i&gt;onSubmit&lt;\/i&gt;&lt;b&gt;&lt;i&gt;, &lt;\/i&gt;&lt;\/b&gt;&lt;b&gt;client&lt;\/b&gt;: Applies to the Web browser when the user clicks submit. \u000d\u000aChecks that \u000d\u000athe data passed from the browser corresponds to a specified pattern. Can be bypassed by \u000d\u000aMITM proxy.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:19mm; margin-right:6mm; text-indent:-6mm; margin-top:0mm; margin-bottom:3mm; \"&gt;\u000d\u000a&lt;font face=\"Symbol\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&amp;#183;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&lt;i&gt;onServer,&lt;\/i&gt;&lt;b&gt;&lt;i&gt; &lt;\/i&gt;&lt;\/b&gt;&lt;b&gt;server&lt;\/b&gt;: Applies to server-side data after the form is submitted. \u000d\u000aColdFusion \u000d\u000achecks the form data of cfinput and cftextarea tags and generates an error page if the data \u000d\u000ais not valid. Use this tag in conjunction with the cferror tag to specify the validation error \u000d\u000apage. Note: a failure to specify an error page will result in an information leak in your \u000d\u000aerror handling routine, as ColdFusion errors are verbose.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:19mm; margin-right:6mm; text-indent:-6mm; margin-top:0mm; margin-bottom:3mm; \"&gt;\u000d\u000a&lt;font face=\"Symbol\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&amp;#183;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&lt;i&gt;IsValid&lt;\/i&gt;, &lt;b&gt;server: &lt;\/b&gt;tests an input variable to determine if the content of the variable meets \u000d\u000ainternal validation rules. The&lt;b&gt; &lt;\/b&gt;&lt;i&gt;IsValid&lt;\/i&gt; function returns true or false for the variable.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:19mm; margin-right:6mm; text-indent:-6mm; margin-top:0mm; margin-bottom:3mm; \"&gt;\u000d\u000a&lt;font face=\"Symbol\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&amp;#183;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&lt;i&gt;Cfparam, &lt;\/i&gt;&lt;b&gt;server: &lt;\/b&gt;tests an input variable to determine if the variable meets validation \u000d\u000acriteria. If the variable does not meet the criteria an expression exception is generated.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:19mm; margin-right:6mm; text-indent:-6mm; margin-top:0mm; margin-bottom:3mm; \"&gt;\u000d\u000a&lt;font face=\"Symbol\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&amp;#183;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&lt;i&gt;Cfqueryparam, &lt;\/i&gt;&lt;b&gt;server: &lt;\/b&gt;evaluates the content of a HTTP query string to validate whether \u000d\u000athe string meets validation criteria.&amp;#160; This tag is useful for scrubbing HTTP query strings \u000d\u000aprior to further processing.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a<\/Remediation>\u000d\u000a        <\/SmartAttackInfo>\u000d\u000a        <ReportItems \/>\u000d\u000a        <Categories>\u000d\u000a          <Category>\u000d\u000a            <Name>OWASP-2013<\/Name>\u000d\u000a          <\/Category>\u000d\u000a        <\/Categories>\u000d\u000a      <\/SmartAttacksData>\u000d\u000a      <SmartAttacksData>\u000d\u000a        <SmartAttackInfo PolicyId=\"70c7aa50-a01d-445b-9d22-f584ea045577\" PolicyVersion=\"1.2\" CenzicId=\"CPL0002112\" Severity=\"Default\" VulnerabilityIds=\"CWE-566\">\u000d\u000a          <SmartAttackName>SQL Disclosure - [OWASP 2013 A 1]<\/SmartAttackName>\u000d\u000a          <Description>&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aSQL Disclosure is a vulnerability caused by a Web application sending user input into a SQL query \u000awithout validation. It is a type of SQL Injection vulnerability, where an attacker is able to extract \u000amuch more information than he is authorized for, simply by using SQL statements that always \u000aevaluate to true in the input. This SmartAttack injects such statements and looks for evidence of \u000aextra information getting revealed in the response.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a<\/Description>\u000d\u000a          <TechnicalDescription>&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aTests with this SmartAttack inject specially formatted SQL queries designed to cause the \u000d\u000aapplication to return additional information. The SmartAttack identifies a vulnerability when it \u000d\u000adetects a growth, beyond a configurable threshold, in the number of rows of a table or in the number \u000d\u000aof tables on the page (See parameter &amp;lsquo;Reveals More Threshold&amp;rsquo; below).&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis SmartAttack can fault inject fields in HTTP queries (which typically correspond to fields in \u000d\u000aforms), particular HTTP headers, and cookies. By default, it injects fields in HTTP queries.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis SmartAttack works with all kinds of traversals. This SmartAttack walks the traversal and \u000d\u000aidentifies HTTP requests which are candidates for fault injection. For each candidate request, the \u000d\u000aSmartAttack sends a series of fault-injected requests, trying a variety of problematic strings.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis SmartAttack can be configured to recognize error pages that are received in response to fault-\u000d\u000ainjected input, allowing it to ignore legitimate responses that might otherwise appear to be faults. \u000d\u000aThe threshold for the growth in table rows or tables is also configurable. There are several options \u000d\u000agoverning the fault injection functionality, as detailed in the Parameters section below.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:2mm; margin-right:6mm; text-indent:0mm; margin-top:4mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Arial\" color=\"#002e5c\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&lt;b&gt;To Use&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:19mm; margin-right:6mm; text-indent:-6mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a1.&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;Create a traversal that represents the target application, or a subset \u000d\u000aof specific pages in \u000d\u000athe application.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:19mm; margin-right:6mm; text-indent:-6mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a2.&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;Create a new Assessment or open an existing Assessment.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:19mm; margin-right:6mm; text-indent:-6mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a3.&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;Add the traversal created above to the Assessment.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:19mm; margin-right:6mm; text-indent:-6mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a4.&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;Add this SmartAttack to the Assessment.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:19mm; margin-right:6mm; text-indent:-6mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a5.&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;Set the parameters or accept the defaults in the Assessment (See below).&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:19mm; margin-right:6mm; text-indent:-6mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a6.&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;Run the Assessment.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:2mm; margin-right:6mm; text-indent:0mm; margin-top:4mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Arial\" color=\"#002e5c\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&lt;b&gt;To Verify&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aHere are the steps to be followed to manually verify a vulnerability reported by this SmartAttack:&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:19mm; margin-right:6mm; text-indent:-6mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a1.&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;Note the field shown to be vulnerable and the &amp;lsquo;Or True&amp;rsquo; \u000d\u000aand &amp;lsquo;And True&amp;rsquo; injection values \u000d\u000aused from the report item.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:32mm; margin-right:6mm; text-indent:-6mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aa.&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;The plain text form of the injection values and the vulnerable field \u000d\u000ais specified \u000d\u000ain the &amp;lsquo;Item Details&amp;rsquo; tab of the report item.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:32mm; margin-right:6mm; text-indent:-6mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000ab.&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;The exact form of the injection value is also highlighted in the &amp;lsquo;HTTP \u000d\u000aRequest&amp;rsquo; \u000d\u000atab when it is opened after double-clicking on the report item first.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:19mm; margin-right:6mm; text-indent:-6mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a2.&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;Note the URL and the request shown to contain the vulnerable field from \u000d\u000athe report item \u000d\u000a&amp;lsquo;Item Details&amp;rsquo; and &amp;lsquo;HTTP Request&amp;rsquo; tabs.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:19mm; margin-right:6mm; text-indent:-6mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a3.&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;Using the sequence view and a replay of the traversal, determine the \u000d\u000asequence of actions \u000d\u000athat led to generation of this request. Also, store the page that was received for the \u000d\u000aoriginal traversal request.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:19mm; margin-right:6mm; text-indent:-6mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a4.&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;From a normal browser, follow this sequence to reach the page from which \u000d\u000athe request \u000d\u000awas generated. At this point, follow one of these two approaches while performing the \u000d\u000alast step in the sequence of actions to generate the vulnerable request:&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:32mm; margin-right:6mm; text-indent:-6mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aa.&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;Find the vulnerable field and insert the plain form of the &amp;lsquo;Or \u000d\u000aTrue&amp;rsquo; injection \u000d\u000avalue in it and perform the last step to generate the vulnerable request. Store the \u000d\u000apage that is received for this request.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:32mm; margin-right:6mm; text-indent:-6mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000ab.&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;If the vulnerable field is hidden, or if the plain form of the &amp;lsquo;Or \u000d\u000aTrue&amp;rsquo; injection \u000d\u000avalue is same as the exact form used, then perform the last step, but use an \u000d\u000aintercepting HTTP proxy such as Paros or WebScarab to trap the vulnerable \u000d\u000arequest. Then, insert the exact form of the &amp;lsquo;Or True&amp;rsquo; injection value in place of \u000d\u000athe value of the field and send the request. Store the page that is received for this \u000d\u000arequest.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:19mm; margin-right:6mm; text-indent:-6mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a5.&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;Repeat the last step for the &amp;lsquo;And True&amp;rsquo; injection value.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:19mm; margin-right:6mm; text-indent:-6mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a6.&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;Compare the three stored pages visually in a browser. The page received \u000d\u000afor the &amp;lsquo;Or \u000d\u000aTrue&amp;rsquo; injection should show considerable more data than the one received for the original \u000d\u000atraversal request while page received for the &amp;lsquo;And True&amp;rsquo; injection should match the one \u000d\u000areceived for the original traversal request. It is possible that the difference is not \u000d\u000arecognizable visually, in which case, the same can be done with the HTML source of the \u000d\u000apages in an HTML editor.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:19mm; margin-right:6mm; text-indent:-6mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a7.&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;Satisfaction of this comparison condition confirms the vulnerability.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:2mm; margin-right:6mm; text-indent:0mm; margin-top:4mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Arial\" color=\"#002e5c\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&lt;b&gt;Parameters&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Arial\" color=\"#333399\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&lt;b&gt;&lt;i&gt;Optional&lt;\/i&gt;&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:0mm; margin-right:6mm; text-indent:9mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Attacks to Delay&amp;#160;&amp;#160; (list of regular expressions)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter is a set of regular expressions that will be used to identify requests for which attacks \u000d\u000ashould be delayed until the end of the traversal (such as login requests). Slashes are meta-characters \u000d\u000ain regular expressions, so if you wish to include them in your URL pattern, you must escape them \u000d\u000awith a backslash.&lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;login&amp;rdquo;.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Inject Form Fields&amp;#160;&amp;#160; (Boolean)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter controls whether HTTP query fields will be injected. By default, all fields will be \u000d\u000ainjected. &lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;true&amp;rdquo;.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Inject Cookies (Boolean)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter controls whether individual cookies in the &amp;ldquo;Cookie&amp;rdquo; header (if present) will \u000d\u000abe \u000d\u000ainjected. &lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;false&amp;rdquo;.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Inject A Field At A Time (Boolean)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter specifies that fault injection should happen by injecting one item at a time instead \u000d\u000aof \u000d\u000aall at once. The injectable items are elements of GET or POST queries, individual headers, or \u000d\u000acookies. Field-at-a-time injection can take considerably longer but might uncover vulnerabilities \u000d\u000athat would not be found with all-at-once injection. (The reason for this is that some forms employ \u000d\u000ainput validation only on some but not all fields. With all-at-once injection, if &lt;i&gt;any&lt;\/i&gt; of the fields \u000d\u000areject \u000d\u000aan input, vulnerabilities in non-validated fields will remain undetected.)&lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;true&amp;rdquo;.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Stop On First Fault (Boolean)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter controls whether the SmartAttack will stop after finding the first injection value that \u000d\u000areveals a vulnerability in a form, or continue to find all injection values that produce faults.&lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;true&amp;rdquo;.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Error Page Regular Expression (regular expression)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter specifies a regular expression pattern which will be used to identify error pages by \u000d\u000amatching a string in their content. Such error pages will be excluded from fault detection. This \u000d\u000amechanism is useful as a way of eliminating false positives.&lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;&amp;rdquo; (no regular expression).&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;URLs To Skip (list of regular expressions)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter specifies a list of regular expression patterns which will be matched against the \u000d\u000aURL of each HTTP request that is a candidate for fault injection. If the URL matches one of the \u000d\u000apatterns in the skip list, the request will not be fault injected.&lt;br \/&gt;\u000d\u000aThe default value is an empty list.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Fields To Skip (list of regular expressions)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter specifies a list of regular expression patterns which will be used to identify form \u000d\u000afield and cookie names that should be excluded from fault injection.&lt;br \/&gt;\u000d\u000aThe default value is an empty list, but can be managed from Application Settings as well.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;URLs To Inject (list of regular expressions)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter specifies a list of regular expression patterns which will be matched against the \u000d\u000aURL of each HTTP request that is a candidate for fault injection. If the URL matches one of the \u000d\u000apatterns in the inject list, only then will the request be fault injected. An empty list means all \u000d\u000arequests will be injected, subject to other parameter settings.&lt;br \/&gt;\u000d\u000aThe default value is an empty list.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Fields To Inject (list of regular expressions)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter specifies a list of regular expression patterns which will be used to identify form \u000d\u000afield and cookie names that should be fault injected. Any field that is not on this list will not be \u000d\u000ainjected. An empty list means all fields will be injected, subject to other parameter settings.&lt;br \/&gt;\u000d\u000aThe default value is an empty list.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Report Individual Successes (Boolean)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter controls whether the SmartAttack will issue a &amp;ldquo;Pass&amp;rdquo; report item for every \u000d\u000arequest \u000d\u000a(form) that was injected with no vulnerabilities being found. By default, the parameter is false.&lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;false&amp;rdquo;.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Injection String Groups (enumeration)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter controls which subsets of fault injection strings are used in a test. The strings are \u000d\u000adivided into &amp;ldquo;Set #1,&amp;rdquo; &amp;ldquo;Set #2,&amp;rdquo; &amp;ldquo;Set #3,&amp;rdquo; and &amp;ldquo;Set #4,&amp;rdquo; \u000d\u000awhere the first group consists of just a few \u000d\u000afault injection values (those that are typically the most effective) and the following groups add more \u000d\u000astrings. The fourth group is very large and should be run only when comprehensive testing is the \u000d\u000apriority and the amount of time consumed by the Assessment run is not. The groups are mutually \u000d\u000aexclusive and not supersets of one another, and you can choose to run some and not others. \u000d\u000aSpecifying no groups results in all strings being used.&lt;br \/&gt;\u000d\u000aThe default is to use the following fault injection string groups: [&amp;ldquo;Set #1&amp;rdquo;, &amp;ldquo;Set \u000d\u000a#2&amp;rdquo;, &amp;ldquo;Set #3&amp;rdquo;].&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Arial\" color=\"#333399\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&lt;b&gt;&lt;i&gt;Advanced&lt;\/i&gt;&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Max Traversal Restarts (integer)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter controls whether and how many times a fault injector will attempt to restart a \u000d\u000atraversal if fault injection interferes with replaying the traversal. The parameter can be set to &amp;ldquo;0&amp;rdquo; \u000d\u000ato \u000d\u000aprevent the traversal from being restarted. &lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;4&amp;rdquo;.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:0mm; margin-right:6mm; text-indent:9mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Make Requests Using Sockets (Boolean)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter controls whether browsing requests will be performed using HTTP sockets. The \u000d\u000aparameter can be unchecked to make sure that even the concurrent browsing requests are made \u000d\u000athrough Mozilla windows.&lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;true&amp;rdquo; (checked).&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Start SmartAttack After Traversal (Boolean)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis is an advanced parameter that controls whether the SmartAttack processing (concurrent \u000d\u000abrowsing, in this case) begins during the traversal or after the traversal has completed. The default \u000d\u000ais false, meaning that the processing will start &lt;i&gt;during&lt;\/i&gt; the traversal. In cases where traversals \u000d\u000aare \u000d\u000aunable to complete due to the effects of SmartAttack processes during concurrent browsing, setting \u000d\u000athis parameter to true will postpone concurrent browsing until after the traversal has completed, \u000d\u000awhich allows all of the injectable requests in the traversal to be collected and injected after the \u000d\u000atraversal is over. While this allows all of the concurrent browsing to occur, it might not occur in \u000d\u000athe \u000d\u000asame context or state that it would have during the traversal. Default = &amp;ldquo;false&amp;rdquo;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Skip First N Injectable Requests (integer)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis is an advanced parameter that specifies the number of the injectable request on which fault \u000d\u000ainjection will begin, allowing previous requests to be exempted from fault injection. In some cases, \u000d\u000atraversals are unable to complete due to fault injection. In such cases, this parameter can be used \u000d\u000ato \u000d\u000apick up fault injection after the point where the traversal was compromised in a previous \u000d\u000aAssessment run. Report items for fault injector SmartAttacks identify the number of each request \u000d\u000abeing injected. This enables you to identify the field where you wish to start and enter that number \u000d\u000ain this parameter.&lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;0&amp;rdquo;.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Headers To Inject (list of strings)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter indicates which HTTP headers (if any) will be injected. The parameter should \u000d\u000aspecify a list of strings with HTTP header names. By default, no HTTP headers will be fault \u000d\u000ainjected. Valid headers are &amp;quot;Accept&amp;quot;, &amp;quot;Accept-Charset&amp;quot;, &amp;quot;Accept-Encoding&amp;quot;, \u000d\u000a&amp;quot;Accept-Language&amp;quot;, \u000d\u000a&amp;quot;Allow&amp;quot;, &amp;quot;Authorization&amp;quot;, &amp;quot;Cache-Control&amp;quot;, &amp;quot;Connection&amp;quot;, &amp;quot;Content-Encoding&amp;quot;, \u000d\u000a&amp;quot;Content-\u000d\u000aLanguage&amp;quot;, &amp;quot;Content-Length&amp;quot;, &amp;quot;Content-Location&amp;quot;, &amp;quot;Content-MD5&amp;quot;, &amp;quot;Content-Range&amp;quot;, \u000d\u000a&amp;quot;Content-\u000d\u000aType&amp;quot;, &amp;quot;Cookie&amp;quot;, &amp;quot;Date&amp;quot;, &amp;quot;Expect&amp;quot;, &amp;quot;Expires&amp;quot;, &amp;quot;From&amp;quot;, \u000d\u000a&amp;quot;Host&amp;quot;, &amp;quot;If-Match&amp;quot; &amp;quot;If-Modified-Since&amp;quot;, &amp;quot;If-\u000d\u000aNone-Match&amp;quot;, &amp;quot;If-Range&amp;quot;, &amp;quot;If-Unmodified-Since&amp;quot;, &amp;quot;Last-Modified&amp;quot;, \u000d\u000a&amp;quot;Location&amp;quot;, &amp;quot;Max-Forwards&amp;quot;, \u000d\u000a&amp;quot;Pragma&amp;quot;, &amp;quot;Proxy-Authorization&amp;quot;, &amp;quot;Range&amp;quot;, &amp;quot;Referer&amp;quot;, &amp;quot;TE&amp;quot;, \u000d\u000a&amp;quot;Trailer&amp;quot;, &amp;quot;Transfer-Encoding&amp;quot;, \u000d\u000a&amp;quot;Upgrade&amp;quot;, &amp;quot;User-Agent&amp;quot;, &amp;quot;Via&amp;quot;, and &amp;quot;Warning&amp;quot;. &lt;br \/&gt;\u000d\u000aThe default value is an empty list.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Skip Equivalent Requests (Boolean)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter controls whether the SmartAttack will skip fault injection for requests that are \u000d\u000aequivalent to ones that have already been injected. Requests are considered equivalent if their query \u000d\u000aelement names are the same, even if the query values differ.&lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;true&amp;rdquo;.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Distinguish Request Cookies (Boolean)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter only takes effect if the skipEquivalentRequests parameter is true. This parameter \u000d\u000acontrols whether the SmartAttack will consider cookie values while&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;font face=\"Times New Roman\" color=\"#ff0000\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&amp;#160;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000adetermining whether requests \u000d\u000aare equivalent.&lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;false&amp;rdquo;.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Max Requests With Same URL (integer)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter sets the maximum number of requests that will be injected that have the same base \u000d\u000aURL, but different queries.&lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;15&amp;rdquo;.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Ajax Request Formats (file)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter specifies the file to be used for descriptions of different AJAX request formats.&lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;font face=\"Lucida Console\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aAjaxRequestFormat.txt&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&amp;rdquo; (the file).&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Detection Value File (file)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter specifies the name of the file that contains the fault detection strings for this \u000d\u000aSmartAttack. This SmartAttack identifies faults by matching observed responses to the strings in \u000d\u000athis file.&lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;font face=\"Lucida Console\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000adata_FD_SQLDisclosure.txt&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&amp;rdquo; (the file).&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Injection Value File (file)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter specifies the name of the file that contains the fault injection strings for this \u000d\u000aSmartAttack. Each SmartAttack that involves fault injection is associated with its own unique file \u000d\u000a(set of inputs), except for Buffer Overflow and Format String, which do not require separate sets of \u000d\u000ainputs.&lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;font face=\"Lucida Console\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000adata_FI_SQLDisclosure.txt&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&amp;rdquo; (the file).&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000d\u000a&lt;span style=\"font-size:11pt\"&gt;\u000d\u000a&lt;i&gt;Reveals More Threshold (integer)&lt;\/i&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis parameter specifies what number of extra rows in an injected response is considered as \u000d\u000arevealing more information. &lt;br \/&gt;\u000d\u000aThe default value is &amp;ldquo;3&amp;rdquo;.&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:2mm; margin-right:6mm; text-indent:0mm; margin-top:4mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Arial\" color=\"#002e5c\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&lt;b&gt;Report Messages&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000aThis SmartAttack generates the following report output:&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&lt;b&gt;Pass&lt;\/b&gt;: &amp;ldquo;No SQL disclosure vulnerabilities detected.&amp;rdquo;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&lt;b&gt;Vulnerabilities:&lt;\/b&gt;&amp;#160; &amp;ldquo;SQL disclosure vulnerability detected.&amp;rdquo;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000d\u000a&lt;font face=\"Times New Roman\"&gt;\u000d\u000a&lt;span style=\"font-size:10pt\"&gt;\u000d\u000a&lt;b&gt;Warnings&lt;\/b&gt;: &amp;ldquo;Possible SQL disclosure vulnerability.&amp;rdquo;&lt;\/span&gt;&lt;\/font&gt;\u000d\u000a&lt;\/p&gt;\u000d\u000a<\/TechnicalDescription>\u000d\u000a          <HowItWorks>&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aSQL Disclosure is a special kind of a SQL Injection vulnerability. SQL Injection is a type of attack \u000athat allows a remote user to pass SQL (Structured Query Language) commands and strings to a \u000aback-end database. By exploiting SQL injection vulnerabilities an attacker can gain access to&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;font face=\"Times New Roman\" color=\"#ff0000\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;\u000a&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000asensitive information and potentially gain full control over the system on which the database is \u000ainstalled.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aAn attacker may make use of a SQL Disclosure vulnerability to gain sensitive information without \u000ahaving the required privileges or to locate generic SQL Injection vulnerabilities. He starts by trying \u000ato cause an error in the processing of a SQL query, thereby generating a SQL exception. If such \u000aexceptions are suppressed by the application, he may use the Blind SQL technique to locate a SQL \u000aInjection vulnerability.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aThis enables him to guess the correct structure of the query. For example, if an injection with the \u000aconstruct &lt;\/span&gt;&lt;\/font&gt;\u000a&lt;font face=\"Courier New\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;rdquo; -- -&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;causes an exception but with &lt;\/span&gt;&lt;\/font&gt;\u000a&lt;font face=\"Courier New\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;rsquo;;#&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;does not, then he understands that the query \u000aends in a &lt;\/span&gt;&lt;\/font&gt;\u000a&lt;font face=\"Courier New\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;rsquo;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a. Next, he chooses an appropriate SQL statement, for example &lt;\/span&gt;&lt;\/font&gt;\u000a&lt;font face=\"Courier New\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;rsquo; or 1=1;#&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a, which \u000awill always result in a true state and uses this in the input. When this modified query gets executed, \u000athe attacker stands to gain sensitive information not available to him otherwise.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:2mm; margin-right:6mm; text-indent:0mm; margin-top:4mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Arial\" color=\"#002e5c\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&lt;b&gt;Exploit&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aA SQL Disclosure vulnerability, by definition, involves disclosure of information to users without \u000asufficient privileges by way of a SQL Injection. Hence, the disclosure of this extra information may \u000abe considered as an exploit of this vulnerability. In this sense, this attack is itself an exploit of \u000aa \u000ageneric SQL Injection vulnerability.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a<\/HowItWorks>\u000d\u000a          <Impact>&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aA SQL Disclosure vulnerability enables an attacker to gain access to information that he does not \u000ahave the privileges for. This includes data stored in the tables and probably credentials for accessing \u000asections of an application requiring higher privileges.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aMany Web applications store important information in SQL databases, such as financial \u000atransactions of users, confidential company records and credit card numbers. Querying such \u000adatabases without proper access restrictions can cause leakage of this data to anyone who can send \u000aqueries to them through a Web application. For example, a well-crafted injection on a banking \u000aapplication may reveal transactions done by all users to one malicious user. Similarly, an injection \u000aon an application used for taxation by companies may expose tax details of many companies to an \u000aattacker.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a<\/Impact>\u000d\u000a          <Remediation>&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aThe following recommendations will help to mitigate the risk of SQL injection attacks:&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;ul style=\"margin-top: 0mm; margin-bottom: 0mm; \"&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000aMonitor your production applications for the latest security vulnerabilities and bugs.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000aKeep up to date on patches and security fixes as they are released by the vendor or \u000amaintainer.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000aLimit the types of characters and strings that can be passed as application parameters by \u000aconfiguring native application filters.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000aAvoid using external SQL interpreters.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000aAudit your applications frequently at&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;font face=\"Times New Roman\" color=\"#ff0000\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000apoints where HTML input can reach SQL \u000ainterpreters.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000aEnsure proper input validation is performed wherever user supplied data is used, \u000aregardless of the application&amp;rsquo;s relationship to a back-end database.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000aAvoid using dynamic SQL or PL\/SQL and use bound variables whenever possible.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000aEnforce strict limitations on the rights to database access.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000aRemove any sample applications or demo scripts that allow remote database queries.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;\/ul&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aThe following ASP.NET code shows a simple example of a SQL disclosure vulnerability.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aAssume the goal of the code is to query user account details, such as name, account id, and credit \u000acard, from a users PIN number.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aSqlDataAdapter myCommand = new SqlDataAdapter(&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;quot;SELECT usr_name, usr_accntid, usr_cc FROM \u000aaccounts WHERE usr_pin = '&amp;quot; +&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; PIN.Text + &amp;quot;'&amp;quot;, myConnection);&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aAssuming a PIN id of 10012301, the code above results in the following SQL query:&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aSELECT usr_name, usr_accntid, usr_cc FROM accounts WHERE usr_pin = &amp;lsquo;10012301&amp;rsquo;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aThe insertion of special characters allows a remote attacker to manipulate the SQL query and thus \u000asubstitute or append additional queries in the place of the expected value. This allows a malicious \u000auser to craft arbitrary SQL expressions and have them executed against the database. For example, \u000athe query &amp;ldquo;1000' or 1=1--&amp;ldquo; would allow the attacker to enumerate the name, account id, and \u000acredit \u000acard number of every user in the accounts table, in virtue of the following SQL expression:&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aSELECT usr_name, usr_accntid, usr_cc FROM accounts WHERE usr_pin = &amp;lsquo;1000&amp;rsquo; or 1=1 --&amp;lsquo;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aTo prevent SQL Injection type attacks, you should consider adopting the following practices:&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:2mm; margin-right:6mm; text-indent:0mm; margin-top:4mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Arial\" color=\"#002e5c\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&lt;b&gt;ASP.NET&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;ul style=\"margin-top: 0mm; margin-bottom: 0mm; \"&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000aUse the RegularExpressionValidator and RangeValidator to ensure that input data \u000aconforms to the expected type and format. If using HTML input controls, use the Regex \u000aclass (in the System.Text.RegularExpressions namespace) in your server-side code to \u000aconstrain user input to allowable types and expected format.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000a&amp;#160;Establish and enforce rules for allowable input and reject data that does not conform to \u000ayour defined safe input.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000aConsider executing all queries as parameters with stored procedures. The use of \u000aparameters helps to prevent insertion of apostrophes and hyphens. Note, merely using \u000astored procedures does not prevent SQL injection-based attacks.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000aEnforce length limits on inputs, and reject input that is longer than the specified length. \u000aThis practice can make SQL injection vulnerabilities more difficult to exploit.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000aValidate the number of rows that are expected to be returned by a particular query. \u000aProduce exceptions if more rows than the expected value are returned by the query type.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000aPerform input validation on both the client and server. Do not rely on client-side code to \u000aensure safe inputs. Ensure your input validation routines include server- side code that \u000aalso validates input against a set of safe or expected characters and formats.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;\/ul&gt;\u000a&lt;p style=\"margin-left:2mm; margin-right:6mm; text-indent:0mm; margin-top:4mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Arial\" color=\"#002e5c\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&lt;b&gt;PHP&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;ul style=\"margin-top: 0mm; margin-bottom: 0mm; \"&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000aUse addslashes() to escape SQL queries.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000aEmploy input validation to against a set of allowable characters and reject input which \u000adeviates from this pattern.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000aIf you are using MySQL with PHP, use mysql_real_escape_string() to escape SQL \u000aqueries. Be advised, this function does not escape MySQL wildcard characters, such as % \u000aor _, which will need to be sanitized separately by input validation routines.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000aEnforce length limitations on input so that inputs longer than the expected length are \u000arejected.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;\/ul&gt;\u000a&lt;p style=\"margin-left:2mm; margin-right:6mm; text-indent:0mm; margin-top:4mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Arial\" color=\"#002e5c\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&lt;b&gt;Java&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aThe risk associated with SQL injection can be mitigated to a large extent in Java by the use of \u000aprepared statements or a combination of stored procedures and callable statements. Input validation \u000ais still required apart from these techniques.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Arial\" color=\"#333399\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&lt;b&gt;&lt;i&gt;Vulnerable Code&lt;\/i&gt;&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aConsider a typical implementation of a SQL query in Java:&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aString username = httpRequest.getParameter(&amp;ldquo;username&amp;rdquo;);&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aString sqlQuery = &amp;ldquo;SELECT * FROM users WHERE userid = &amp;lsquo;&amp;rdquo; + username + &amp;lsquo;&amp;rdquo;;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aStatememt stmt = db_conn.createStatement(sqlQuery);&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:3mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aResultSet results = stmt.executeQuery();&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aIn this code, the input &amp;quot;username&amp;quot; from an HttpServletRequest object is directly used in a \u000alive SQL \u000aquery. A user could give potentially harmful input in the field username in the web application to \u000acompromise it.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Arial\" color=\"#333399\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&lt;b&gt;&lt;i&gt;Secure Code&lt;\/i&gt;&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:3mm; margin-right:0mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000a&lt;span style=\"font-size:11pt\"&gt;\u000a&lt;b&gt;&lt;i&gt;Input Validation&lt;\/i&gt;&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aAny input such as that mentioned above should always be validated before being used in a SQL \u000aquery. The validation code looks like this:&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aif (&amp;lt;validating_condition&amp;gt;)&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; String sqlQuery = &amp;ldquo;SELECT * FROM users WHERE userid = &amp;lsquo;&amp;rdquo; \u000a+ username + &amp;lsquo;&amp;rdquo;;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aelse&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:3mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; throw new IllegalArgumentException();&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aHere, if (&amp;lt;validating_condition&amp;gt;) could be a simple length check, such as:&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:3mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aif (username.length() &amp;lt; MAX_POSSIBLE_LENGTH)&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aor, it could amount to a more elaborate regular expression match, for example, for peoples&amp;rsquo; first \u000anames:&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:3mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aif ( username.matches(&amp;ldquo;[0-9a-zA-Z&amp;rsquo;]*&amp;rdquo;) )&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aor, an even more elaborate regular expression, for peoples&amp;rsquo; e-mail addresses:&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:3mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aif ( username.matches(&amp;ldquo;\\b[A-Z0-9._%-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}\\b&amp;rdquo;) )&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aThis means that no input other than what is exactly expected is passed to the SQL query. This \u000aensures that even if an attacker injects SQL into input fields, it never reaches the database server. \u000aWhen using regular expressions, they must be tweaked to represent the exact format of input \u000aexpected.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:3mm; margin-right:0mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000a&lt;span style=\"font-size:11pt\"&gt;\u000a&lt;b&gt;&lt;i&gt;Prepared Statements&lt;\/i&gt;&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aPrepared statements are used to send pre-compiled SQL queries to a database server, in the absence \u000aof stored procedures. In Java, PreparedStatement objects can be used for this purpose with one or \u000amore parameters. This is implemented as follows:&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aString username = httpRequest.getParameter(&amp;ldquo;username&amp;rdquo;);&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aString query = &amp;ldquo;SELECT * FROM users WHERE userid = ?&amp;rdquo;;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aPreparedStatement stmt = db_conn.prepareStatement(query);&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000astmt.setString(1, username);&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:3mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aResultSet results = stmt.executeQuery();&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aThe &amp;quot;?&amp;quot; in the SQL query is a placeholder for parameters to go in. These parameters are set \u000ausing \u000aset---() methods of the PreparedStatement object, e.g., setString(), as shown.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aWhen a prepared statement is used, the database server uses the value of the variable bound to the \u000a&amp;quot;?&amp;quot; provided &amp;quot;as is,&amp;quot; i.e., without interpreting any SQL syntax in it. So, if an \u000aattacker provides \u000ausername &amp;ldquo;name&amp;rsquo; or 1=1 -- -&amp;rdquo;, the database looks for the user with &amp;ldquo;name&amp;rsquo; \u000aor 1=1 -- -&amp;rdquo; as a name, \u000awhich does not return any results and the attack fails.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:3mm; margin-right:0mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000a&lt;span style=\"font-size:11pt\"&gt;\u000a&lt;b&gt;&lt;i&gt;Stored Procedures and Callable Statements&lt;\/i&gt;&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aA stored procedure is a group of SQL statements which performs a specific task. These groups are \u000aentities with the database server, which can be called like SQL queries. CallableStatement objects \u000ain Java are used to call such stored procedures in a safe way, like PreparedStatement objects for \u000asimple SQL queries. CallableStatement objects are used as follows:&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aString username = httpRequest.getParameter(&amp;ldquo;username&amp;rdquo;);&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aCallableStatement cstmt = db_conn.prepareCall(&amp;ldquo;{call findLogin(?,?}&amp;rdquo;);&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000acstmt.setString(1,username);&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000acstmt.registerOutParameter(2,Types.TIMESTAMP);&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000acstmt.executeQuery();&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:3mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aString lastLogin = cstmt.getTimestamp(2).toString();&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aSimilar to prepared statements, the database server uses the value bound to the &amp;quot;?&amp;quot; provided \u000aas is. \u000aSo, the injection fails.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aThe key to the prevention of SQL injection that leads to vulnerabilities such as SQL disclosure and \u000ablind SQL injection is a combination of all the methods described above. No one method by itself \u000acan provide fool-proof protection against SQL injection attacks.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:2mm; margin-right:6mm; text-indent:0mm; margin-top:4mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Arial\" color=\"#002e5c\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&lt;b&gt;ColdFusion&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:3mm; margin-right:0mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000a&lt;span style=\"font-size:11pt\"&gt;\u000a&lt;b&gt;&lt;i&gt;Generic&lt;\/i&gt;&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:3mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aColdFusion provides a number of ways to filter or validate user input. The security measures span \u000aboth client-side and server-side filtering. Where possible, implement your security controls on the \u000aserver-side to avoid tampering of your controls via a Man-In-The-Middle (MITM) proxy. An \u000aattacker can easily bypass client-side controls by using such a program to modify the underlying \u000aHTTP Request as it passes between the proxy and the web application. Additionally, we \u000arecommend that sites using ColdFusion should configure their application using the recommended \u000asecurity features of the Adobe ColdFusion 8 Developers Guide, or the guide relevant to your \u000aversion of ColdFusion.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:3mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aColdFusion Data validation allows you to control the type of data that is allowed as well as to \u000aensure that user-supplied data corresponds to the correct form.&amp;#160; Attentive data validation procedures \u000acan have the following benefits:&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;ul style=\"margin-top: 0mm; margin-bottom: 0mm; \"&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000aEnhance the security of your application by ensuring that malicious users cannot input \u000adata that exploits a security vulnerability, such as SQL Injection, XSS, or buffer \u000aoverflows.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000aEnhance application resilience by rejecting invalid data on the server-side prior to \u000aprocessing the input.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Normal; font-decoration:Normal\"&gt;\u000aEnhance application usability by providing the user with feedback that allows them to \u000acorrect their mistakes, while not generating verbose error messages.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;\/ul&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aThe list below gives you an overview of the available data validation tags, as well as their \u000avalidation type (server vs. client side) methods. For a more detailed explanation consult your \u000aColdFusion Developers resources on the CFML language and its security features:&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;ul style=\"margin-top: 0mm; margin-bottom: 0mm; \"&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Italic; font-decoration:Normal\"&gt;\u000a&lt;i&gt;Mask&lt;\/i&gt;, &lt;b&gt;client&lt;\/b&gt;: Applies to cfinput tags on the client-side. The use of Mask creates a \u000aJavaScript or ActionScript control that verifies that input corresponds to a specified \u000apattern. For example: nnn-nnn-nnnn where &amp;ldquo;n&amp;rdquo; is an integer. Note, this is a client-side \u000acontrol that can be easily bypassed.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Italic; font-decoration:Normal\"&gt;\u000a&lt;i&gt;onBlur, &lt;\/i&gt;&lt;b&gt;client&lt;\/b&gt;: Applies to cfinput and cftextarea tags. &lt;i&gt;onBlur &lt;\/i&gt;creates a JavaScript \u000athat \u000aruns in the browser and checks that user supplied data matches a corresponding pattern. \u000aThis can be bypassed by a Man-In-The-Middle (&lt;i&gt;MITM&lt;\/i&gt;) proxy.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Italic; font-decoration:Normal\"&gt;\u000a&lt;i&gt;onSubmit&lt;\/i&gt;&lt;b&gt;&lt;i&gt;, &lt;\/i&gt;&lt;\/b&gt;&lt;b&gt;client&lt;\/b&gt;: Applies to the Web browser when the user clicks submit \u000aand checks \u000athat the data passed from the browser corresponds to a specified pattern. This can be \u000abypassed by MITM proxy.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Italic; font-decoration:Normal\"&gt;\u000a&lt;i&gt;onServer,&lt;\/i&gt;&lt;b&gt;&lt;i&gt; &lt;\/i&gt;&lt;\/b&gt;&lt;b&gt;server&lt;\/b&gt;: Applies to server-side data after the form is submitted. \u000aColdFusion \u000achecks the form data of cfinput and cftextarea tags and generates an error page if the data \u000ais not valid. Use this tag in conjunction with the cferror tag to specify the validation error \u000apage. Note: a failure to specify an error page will result in an information leak in your \u000aerror handling routine, as ColdFusion errors are verbose.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Italic; font-decoration:Normal\"&gt;\u000a&lt;i&gt;IsValid&lt;\/i&gt;, &lt;b&gt;server: &lt;\/b&gt;Tests an input variable to determine if the content of the variable meets \u000ainternal validation rules. The&lt;b&gt; &lt;\/b&gt;&lt;i&gt;IsValid&lt;\/i&gt; function returns true or false for the variable.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Italic; font-decoration:Normal\"&gt;\u000a&lt;i&gt;Cfparam, &lt;\/i&gt;&lt;b&gt;server: &lt;\/b&gt;Tests an input variable to determine if the variable meets validation \u000acriteria. If the variable does not meet the criteria an expression exception is generated.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;li style=\"margin-left: 23pt; margin-right: 18pt; padding-left: 0pt; font-family: Symbol;  color: #010101;  \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt;background:#ffffff; font-family:Times New Roman; color:#010101; font-weight:Normal; font-style:Italic; font-decoration:Normal\"&gt;\u000a&lt;i&gt;Cfqueryparam, &lt;\/i&gt;&lt;b&gt;server: &lt;\/b&gt;Evaluates the content of a HTTP query string to validate whether \u000athe string meets validation criteria.&amp;#160; This tag is useful for scrubbing HTTP query strings \u000aprior to further processing.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/li&gt;\u000a&lt;\/ul&gt;\u000a&lt;p style=\"margin-left:3mm; margin-right:0mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\" size=\"3\"&gt;\u000a&lt;span style=\"font-size:11pt\"&gt;\u000a&lt;b&gt;&lt;i&gt;SQL Security&lt;\/i&gt;&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:3mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aWhen data from a user-supplied parameter is passed within a SQL query, if proper security \u000amechanisms are not in place a malicious user can modify the underlying query and conduct SQL \u000aInjection attacks.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Arial\" color=\"#333399\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&lt;b&gt;&lt;i&gt;Vulnerable Code&lt;\/i&gt;&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:3mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aConsider the code below, which is vulnerable to SQL Injection:&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:0mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;lt;cfquery name=&amp;rdquo;GetMembers&amp;rdquo; datasource=&amp;rdquo;example&amp;rdquo;&amp;gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:0mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160; SELECT FirstName, LastName,&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:0mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160; From Members&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:0mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160; WHERE EmpID=&amp;rsquo;#Form.EmpID#&amp;rsquo;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:0mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;lt;\/cfquery&amp;gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:0mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aThe sample code above could be called by a malicious URL in the following way:&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:0mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aServer\/script.cfm?EmpID=0%20Malicious%20SQL%20Query&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:0mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aWhich would result in following SQL Expression, as if the form consisted of:&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:0mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;lt;cfquery name=&amp;rdquo;GetMembers&amp;rdquo; datasource=&amp;rdquo;example&amp;rdquo;&amp;gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:0mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160; SELECT FirstName, LastName,&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:0mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160; From Members&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:0mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160; WHERE EmpID= 0 MALICIOUS SQL QUERY&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:0mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;lt;\/cfquery&amp;gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:0mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aAn attacker could abuse this vulnerability to delete all data from tables or read or modify the underlying \u000adatabase, or authenticate without a username or password.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:3mm; margin-right:6mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Arial\" color=\"#333399\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&lt;b&gt;&lt;i&gt;Secure Code&lt;\/i&gt;&lt;\/b&gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:0mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aThe &lt;b&gt;cfqueryparam tag&lt;\/b&gt; can be used to evaluate the string parameters prior to processing by the \u000adatabase. You can specify the type of data for the corresponding database columns used in the select \u000astatement and reject input of invalid data types. Cfqueryparam, when used in conjunction with \u000a&lt;b&gt;cfsqltype,&lt;\/b&gt; can also use a wide range of input validation functions, as well as constrain the \u000alength of \u000ainput on the server-side, preventing SQL Injection.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:0mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aFor example:&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:0mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;lt;cfquery name=&amp;rdquo;GetFirstName&amp;rdquo; datasource=&amp;rdquo;example&amp;rdquo;&amp;gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:0mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160; SELECT * FROM Employees&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:0mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160;&amp;#160; WHERE EmpID = &amp;lt;cfqueryparam value = &amp;ldquo;#EmpID#&amp;rdquo;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:0mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;#160; Cfsqltype = &amp;ldquo;cf_sql_integer&amp;rdquo;&amp;gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:6mm; margin-right:0mm; text-indent:0mm; margin-top:0mm; margin-bottom:1mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000a&amp;lt;\/cfquery&amp;gt;&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:0mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aThis code thus prevents SQL Injection of the EmpID parameter value by enforcing an integer data type. \u000aNote that you must enforce proper error handling or this security measure could introduce an \u000ainformation leak via verbose SQL Error Messages.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a&lt;p style=\"margin-left:4mm; margin-right:0mm; text-indent:0mm; margin-top:0mm; margin-bottom:4mm; \"&gt;\u000a&lt;font face=\"Times New Roman\"&gt;\u000a&lt;span style=\"font-size:10pt\"&gt;\u000aWhen manipulating strings, you can use other security measures to enforce a string data type, limit \u000amaximum length of the string, and escape the string values within single quotations to ensure it is \u000aexamined as a single value by the database. For additional information on the use of cfqueryparam and \u000acfsqltype, consult your ColdFusion documentation. In addition to the use of these measures, you should \u000aalso enforce input validation to reject queries that contain special characters. This prevents an attacker \u000afrom manipulating SQL expressions via special characters used by delimiters in database queries.&lt;\/span&gt;&lt;\/font&gt;\u000a&lt;\/p&gt;\u000a<\/Remediation>\u000d\u000a        <\/SmartAttackInfo>\u000d\u000a        <ReportItems \/>\u000d\u000a        <Categories>\u000d\u000a          <Category>\u000d\u000a            <Name>OWASP-2013<\/Name>\u000d\u000a          <\/Category>\u000d\u000a        <\/Categories>\u000d\u000a      <\/SmartAttacksData>\u000d\u000a    <\/SmartAttacks>\u000d\u000a    <ASMSummaryData><asmInfo><asmInfoType>assessmentSummary<\/asmInfoType><asmInfoProvider>hsPolicyEngine<\/asmInfoProvider><asmInfoIndex>5<\/asmInfoIndex><totalAssessmentProblems>2<\/totalAssessmentProblems><totalSeriousAssessmentProblems>2<\/totalSeriousAssessmentProblems><routeTo>operators<\/routeTo><runTime>16007<\/runTime><chsVersionInfo>null<\/chsVersionInfo><startingURL>http:\/\/www.mydomain.com<\/startingURL><traversalRuns>1<\/traversalRuns><totalPages>3<\/totalPages><totalPagesWithBadLoadStatus>3<\/totalPagesWithBadLoadStatus><totalPagesSkipped>0<\/totalPagesSkipped><totalAJAXPageUpdates>0<\/totalAJAXPageUpdates><traversalPages><run n=\"0\">3<\/run><\/traversalPages><traversalStatus><run n=\"0\">normal<\/run><\/traversalStatus><traversalRestart><run n=\"0\">no<\/run><\/traversalRestart><maxTraversalPages>3<\/maxTraversalPages><maxTraversalPagesSkipped>0<\/maxTraversalPagesSkipped><maxTraversalAJAXPageUpdates>0<\/maxTraversalAJAXPageUpdates><totalTraversalSteps>5<\/totalTraversalSteps><totalTraversalStepTime>6291<\/totalTraversalStepTime><maxTraversalStepTime>4762<\/maxTraversalStepTime><averageTraversalStepTime>1258<\/averageTraversalStepTime><totalReportItems>0<\/totalReportItems><totalFailureReportItems>0<\/totalFailureReportItems><totalWarningReportItems>0<\/totalWarningReportItems><totalInformationReportItems>0<\/totalInformationReportItems><totalSuccessReportItems>0<\/totalSuccessReportItems><totalNotifyReportItems>0<\/totalNotifyReportItems><unresponsiveAssessment>false<\/unresponsiveAssessment><appAnalysisHasRun>true<\/appAnalysisHasRun><PCBSeriesCount>2<\/PCBSeriesCount><totalPCBSeriesTime>7297<\/totalPCBSeriesTime><totalPCBRequests>78<\/totalPCBRequests><totalSLRequests>78<\/totalSLRequests><totalBRMRequests>0<\/totalBRMRequests><totalTimedOutResponses>47<\/totalTimedOutResponses><total5xxResponses>0<\/total5xxResponses><totalResentRequests>8<\/totalResentRequests><maxSLPCBRequestRate>35.21126937866211<\/maxSLPCBRequestRate><minSLPCBRequestRate>10.202655792236328<\/minSLPCBRequestRate><maxBRMPCBRequestRate>0<\/maxBRMPCBRequestRate><minBRMPCBRequestRate>0<\/minBRMPCBRequestRate><requestsInPCBSeries><series n=\"0\">73<\/series><series n=\"1\">5<\/series><\/requestsInPCBSeries><requestRateForPCBSeries><series n=\"0\">10.202655792236328<\/series><series n=\"1\">35.21126937866211<\/series><\/requestRateForPCBSeries><timedOutResponsesInPCBSeries><series n=\"0\">47<\/series><series n=\"1\">0<\/series><\/timedOutResponsesInPCBSeries><performanceReport><\/performanceReport><memoryUsageReport>Memory usage summary\u000a\u000a  job                                     28 MB  (100.0 %)  [1]\u000a  traversal                                0 MB  (  0.0 %)  [0]\u000a  injections                              28 MB  (100.0 %)  [1]\u000a  Cross-Site Scripting - [OWASP 2013 A 3]  0 MB  (  0.0 %)  [0]\u000a  Directory Browsing - [OWASP 2013 A 5]   28 MB  (100.0 %)  [1]\u000a\u000a<\/memoryUsageReport><realStatus>Incomplete<\/realStatus><statusAnalysis>The 'real' status reported by the Policy Engine was 'Incomplete'.\u000aASM has determined the 'real' status should be 'Incomplete'.\u000aFailures:\u000a  inaccessible host (1)\u000aPrimary failure: inaccessible host\u000aThe traversal loaded 3 pages.\u000aThere were 0 report items.\u000aThere were 0 failure and warning report items.\u000aThere were 2 assessment problems.\u000aThere were 2 serious assessment problems.\u000aThe assessment was incomplete.\u000aThe assessment seems to have been successful.<\/statusAnalysis><siteFeatureInfo><browser><IE-only><isPresent>false<\/isPresent><\/IE-only><\/browser><\/siteFeatureInfo><\/asmInfo><\/ASMSummaryData>\u000d\u000a    <PagesVisited>\u000d\u000a      <Url>www.mydomain.com\/<\/Url>\u000d\u000a      <Url>www.mydomain.com\/login.asp<\/Url>\u000d\u000a      <Url>www.mydomain.com\/soap<\/Url>\u000d\u000a    <\/PagesVisited>\u000d\u000a  <\/AssessmentRunData>\u000d\u000a<\/Assessments>"}